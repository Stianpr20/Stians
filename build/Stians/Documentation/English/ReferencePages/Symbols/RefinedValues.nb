(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    148184,       3605]
NotebookOptionsPosition[    135857,       3347]
NotebookOutlinePosition[    138091,       3404]
CellTagsIndexPosition[    138004,       3399]
WindowTitle->RefinedValues
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["STIANS SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Stian's Mathematica package\"\>":>
       Documentation`HelpLookup["paclet:Stians/guide/StiansOverview"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Stians/ref/RefinedValues\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["Stians/ref/RefinedValues"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/Stians/ref/\
RefinedValues.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$29192], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "Stians/ref/RefinedValues", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[CellGroupData[{

Cell[TextData[{
 Cell["RefinedValues", "ObjectName"],
 Cell[BoxData[
  TemplateBox[{8},
   "Spacer1"]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["RefinedValues"]], "paclet:Stians/ref/RefinedValues"},
        "RefLink",
        BaseStyle->{"InlineFormula"}], "[", 
       StyleBox["input", "TI"], "]"}]], "InlineFormula"],
     " \[LineSeparator]extracts all relevant and obtainable data from ",
     Cell[BoxData[
      StyleBox["input", "TI"]], "InlineFormula"],
     "."
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["RefinedValues"]], "paclet:Stians/ref/RefinedValues"},
        "RefLink",
        BaseStyle->{"InlineFormula"}], "[", 
       RowBox[{
        StyleBox["input", "TI"], ",", 
        StyleBox["label", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]extracts parameters corresponding to ",
     Cell[BoxData[
      StyleBox["label", "TI"]], "InlineFormula"],
     " from ",
     Cell[BoxData[
      StyleBox["input", "TI"]], "InlineFormula"],
     "."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {None}}}},
 CellID->982511436]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    TemplateBox[{6},
     "Spacer1"]]],
   "Details and Options"
  }], "NotesFrameText"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->34948920],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[{
 "When not specifying a ",
 Cell[BoxData[
  StyleBox["label", "TI"]], "InlineFormula"],
 ", the function returns an association containing data obtained by using \
every valid ",
 Cell[BoxData[
  StyleBox["label", "TI"]], "InlineFormula"],
 ". See the table below."
}], "Notes",
 CellID->897722492],

Cell[TextData[{
 Cell[BoxData[
  StyleBox["input", "TI"]], "InlineFormula"],
 " may be in the form of a path to a directory containing log files or \
directly to a log file. The function will search for log files three levels \
down from ",
 Cell[BoxData[
  StyleBox["input", "TI"]], "InlineFormula"],
 " directory."
}], "Notes",
 CellID->652208781],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  StyleBox["label", "TI"]], "InlineFormula"],
 " specifies which parameters will be extracted from the log. The following \
tags are currently supported:"
}], "Notes",
 CellID->1412870300],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], "\"\<Angles\>\"", Cell[
    "diffractometer and goniometer angles", "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<B\>\"", Cell[TextData[{
     Cell[BoxData[
      FormBox["B", TraditionalForm]], "InlineMath"],
     " matrix"
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<InstrumentModel\>\"", Cell[
    "rotation-, goniometer- and detector parameters", "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<Mosaicity\>\"", Cell["\<\
mosaicities (average profile sizes) for the three scanning directions\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<Refinement\>\"", Cell[TextData[{
     "number of reflections and ",
     Cell[BoxData[
      FormBox[
       SubscriptBox["R", "int"], TraditionalForm]], "InlineMath"],
     " value"
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<U\>\"", Cell[TextData[{
     Cell[BoxData[
      FormBox["U", TraditionalForm]], "InlineMath"],
     " matrix"
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<UB\>\"", Cell[TextData[{
     Cell[BoxData[
      FormBox[
       StyleBox["UB",
        FontSlant->"Italic"], TraditionalForm]], "InlineMath"],
     " matrix"
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<UnitCell\>\"", Cell[
    "lattice parameters", "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<Wavelength\>\"", Cell[
    "radiation wavelength", "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<CorrelationMatrix\>\"", Cell[
    "latest correlation matrix", "TableText"]}
  }]], "2ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, 
   "Rows" -> {None, None, None, None, None, None, None, None, None, {None}}},
 GridBoxDividers->{
  "Rows" -> {{
     True, True, True, True, True, True, True, True, True, True, True}}}},
 CellID->1088266505],

Cell[TextData[{
 "The ",
 Cell[BoxData["\"\<Refinement\>\""], "InlineFormula"],
 " ",
 Cell[BoxData[
  StyleBox["label", "TI"]], "InlineFormula"],
 " gives both the initial and final number of reflections in the peak table, \
as well as the latest ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "int"], TraditionalForm]], "InlineMath"],
 " (internal residue) value."
}], "Notes",
 CellID->1496548533],

Cell[TextData[{
 "The next three tables describes the output from using the ",
 Cell[BoxData["\"\<InstrumentModel\>\""], "InlineFormula"],
 " tag. The first column is a description of the parameter; the second column \
containes the parameter's tag in the log files; the third column gives the \
shorthand labels used in ",
 StyleBox["CrysAlis",
  FontSlant->"Italic"],
 "."
}], "Notes",
 CellID->1445824749],

Cell["The following is related to the orientation of the crystal:", "Notes",
 CellID->489996585],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], Cell[
    "crystal rotation about x-axis", "TableText"], Cell[TextData[StyleBox[
    "Cryst. Rot. X", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "r1", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[
    "crystal rotation about y-axis", "TableText"], Cell[TextData[StyleBox[
    "Cryst. Rot. Y", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "r2", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[
    "crystal rotation about z-axis", "TableText"], Cell[TextData[StyleBox[
    "Cryst. Rot. Z", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "r3", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[
    "crystal wobbling about x-axis", "TableText"], Cell[TextData[StyleBox[
    "Cryst. Dance X", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "w1", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[
    "crystal wobbling aboyt y-axis", "TableText"], Cell[TextData[StyleBox[
    "Cryst. Dance Y", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "w2", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[
    "crystal wobbling about z-axis", "TableText"], Cell[TextData[StyleBox[
    "Cryst. Dance Z", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "w3", "InlineCode"]], "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "Rows" -> {None, None, None, None, None, {None}}},
 GridBoxDividers->{"Rows" -> {{True, True, True, True, True, True, True}}}},
 CellID->1594329934],

Cell["The following is related to the goniometer:", "Notes",
 CellID->1735315860],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], Cell[
    "beam rotation about y-axis", "TableText"], Cell[TextData[StyleBox[
    "Beam. Rot. Y", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "b2", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[
    "beam rotation about z-axis", "TableText"], Cell[TextData[StyleBox[
    "Beam. Rot. Z", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "b3", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[
    "goniometer angle \[Alpha]", "TableText"], Cell[TextData[StyleBox[
    "Alpha Value", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "al", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[
    "goniometer angle \[Beta]", "TableText"], Cell[
    "Beta Value", "InlineCode"], Cell[TextData[StyleBox[
    "be", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[
    "goniometer zero \[Omega]", "TableText"], Cell[TextData[StyleBox[
    "Omega Offset", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "o0", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[
    "goniometer zero \[Theta]", "TableText"], Cell[TextData[StyleBox[
    "Theta Offset", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "t0", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[
    "goniometer zero \[Kappa]", "TableText"], Cell[TextData[StyleBox[
    "Kappa Offset", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "k0", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[
    "goniometer zero \[Phi]", "TableText"], Cell[TextData[StyleBox[
    "Phi Offset", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "p0", "InlineCode"]], "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, 
   "Rows" -> {None, None, None, None, None, None, None, {None}}},
 GridBoxDividers->{
  "Rows" -> {{True, True, True, True, True, True, True, True, True}}}},
 CellID->495210153],

Cell["The following is related to the detector:", "Notes",
 CellID->1085448127],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], Cell[
    "detector rotation about x-axis", "TableText"], Cell[TextData[StyleBox[
    "Det. Rot. X", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "d1", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[
    "detector rotation about y-axis", "TableText"], Cell[TextData[StyleBox[
    "Det. Rot. Y", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "d2", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[
    "detector rotation about z-axis", "TableText"], Cell[TextData[StyleBox[
    "Det. Rot. Z", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "d3", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[
    "detector offset of x-axis", "TableText"], Cell[TextData[StyleBox[
    "Det. Offset X", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "x0", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[
    "detector offset of y-axis", "TableText"], Cell[TextData[StyleBox[
    "Det. Offset Y", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "y0", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[
    "detector distance scale", "TableText"], Cell[TextData[StyleBox[
    "Det. D. Scale", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "dd", "InlineCode"]], "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "Rows" -> {None, None, None, None, None, {None}}},
 GridBoxDividers->{"Rows" -> {{True, True, True, True, True, True, True}}}},
 CellID->1078068979],

Cell["Miscellaneous information:", "Notes",
 CellID->533145374],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], Cell[TextData[{
     "reciprocal lattice parameter ",
     Cell[BoxData[
      SuperscriptBox["a", "*"]], "InlineFormula"]
    }], "TableText"], Cell[TextData[StyleBox[
    "Rec. latt. a*", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "a*", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[TextData[{
     "reciprocal lattice parameter ",
     Cell[BoxData[
      SuperscriptBox["b", "*"]], "InlineFormula"]
    }], "TableText"], Cell[TextData[StyleBox[
    "Rec. latt. b*", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "b*", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[TextData[{
     "reciprocal lattice parameter ",
     Cell[BoxData[
      SuperscriptBox["c", "*"]], "InlineFormula"]
    }], "TableText"], Cell[TextData[StyleBox[
    "Rec. latt. c*", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "c*", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[TextData[{
     "reciprocal lattice angle ",
     Cell[BoxData[
      SuperscriptBox["\[Alpha]", "*"]], "InlineFormula"]
    }], "TableText"], Cell[TextData[StyleBox[
    "Rec. latt. al*", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "al*", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[TextData[{
     "reciprocal lattice angle ",
     Cell[BoxData[
      SuperscriptBox["\[Beta]", "*"]], "InlineFormula"]
    }], "TableText"], Cell[TextData[StyleBox[
    "Rec. latt. be*", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "be*", "InlineCode"]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[TextData[{
     "reciprocal lattice angle ",
     Cell[BoxData[
      SuperscriptBox["\[Gamma]", "*"]], "InlineFormula"]
    }], "TableText"], Cell[TextData[StyleBox[
    "Rec. latt. ga*", "InlineCode"]], "TableText"], Cell[TextData[StyleBox[
    "ga*", "InlineCode"]], "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "Rows" -> {None, None, None, None, None, {None}}},
 GridBoxDividers->{"Rows" -> {{True, True, True, True, True, True, True}}}},
 CellID->1272525534],

Cell[TextData[{
 "CrysAlis",
 StyleBox[" will sometimes also give the ",
  FontSlant->"Plain"],
 Cell[BoxData[
  FormBox["UB", TraditionalForm]], "InlineMath"],
 StyleBox[" orientation matrix in the so-called ",
  FontSlant->"Plain"],
 "Busing & Levy ",
 StyleBox["style, which utilises the ",
  FontSlant->"Plain"],
 "Cholesky decomposition",
 StyleBox[" instead of QR decompoistion. The Cholesky decomposition is an \
upper-triangular matrix that is also conjugate transpose of the input matrix. \
The ",
  FontSlant->"Plain"],
 "U",
 StyleBox[" matrix will in any case be identical.\[LineSeparator]If we let ",
  FontSlant->"Plain"],
 Cell[BoxData[
  FormBox["g", TraditionalForm]], "InlineMath"],
 StyleBox[" denote the unit cell metric, then the ",
  FontSlant->"Plain"],
 Cell[BoxData[
  FormBox["B", TraditionalForm]], "InlineMath"],
 StyleBox[" will be the Cholesky decomposition of the inverse of ",
  FontSlant->"Plain"],
 Cell[BoxData[
  FormBox["g", TraditionalForm]], "InlineMath"],
 StyleBox[".",
  FontSlant->"Plain"]
}], "Notes",
 FontSlant->"Italic",
 CellID->2144584843],

Cell["\<\
Options are concerned with extraction of the lattice parameters:\
\>", "Notes",
 CellID->1699689775],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], "\"\<ConstrainedCell\>\"", "True", Cell[
    "use constrained unit cell parameters", "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<Uncertainties\>\"", "False", Cell[
    "include uncertainties", "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<Units\>\"", "False", Cell[TextData[{
     "return values as a ",
     StyleBox[ButtonBox["Quantity",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Quantity"], "InlineCode"]
    }], "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, None, {None}}},
 GridBoxDividers->{"Rows" -> {{True, True, True, True}}}},
 CellID->1144728824],

Cell[TextData[{
 "The ",
 Cell[BoxData["\"\<Units\>\""], "InlineFormula"],
 " options only works with ",
 Cell[BoxData["\"\<Angles\>\""], "InlineFormula"],
 ", ",
 Cell[BoxData["\"\<Mosaicity\>\""], "InlineFormula"],
 ", ",
 Cell[BoxData["\"\<Refinement\>\""], "InlineFormula"],
 ", ",
 Cell[BoxData["\"\<UnitCell\>\""], "InlineFormula"],
 " and ",
 Cell[BoxData["\"\<Wavelength\>\""], "InlineFormula"],
 "."
}], "Notes",
 CellID->451284256],

Cell[TextData[{
 "The ",
 Cell[BoxData["\"\<Uncertainties\>\""], "InlineFormula"],
 " options only works with ",
 Cell[BoxData["\"\<Mosaicity\>\""], "InlineFormula"],
 " and ",
 Cell[BoxData["\"\<UnitCell\>\""], "InlineFormula"],
 "."
}], "Notes",
 CellID->1298561670],

Cell[TextData[{
 "When extracting matrices (",
 Cell[BoxData[
  FormBox["UB", TraditionalForm]], "InlineMath",
  FontSlant->"Italic"],
 ", ",
 Cell[BoxData[
  FormBox["U", TraditionalForm]], "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox["B", TraditionalForm]], "InlineMath"],
 "), ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["RefinedValues"]], "paclet:Stians/ref/RefinedValues"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " will ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Chop"]], "paclet:ref/Chop"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " entries that are close to zero by a tolerance of ",
 Cell[BoxData[
  SuperscriptBox["10", 
   RowBox[{"-", "5"}]]], "InlineFormula"],
 "."
}], "Notes",
 CellID->1128229463],

Cell["", "SectionFooterSpacer"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(8)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->1123462809],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1363206439],

Cell[BoxData[
 RowBox[{
  RowBox[{"logfile", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$StiansExamples", ",", "\"\<logfile.txt\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->943849540],

Cell[TextData[{
 "Extracting the ",
 Cell[BoxData[
  FormBox[
   StyleBox["UB",
    FontSlant->"Italic"], TraditionalForm]], "InlineMath"],
 " orientation matrix:"
}], "ExampleText",
 CellID->1977856555],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RefinedValues", "[", 
   RowBox[{"logfile", ",", "\"\<UB\>\""}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1638640303],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.043383481`"}], 
      RowBox[{"-", "0.0015662801`"}], "0.0013045741`"},
     {"0.023267819`", "0.049149139999999994`", "0.0026642684`"},
     {"0.00009710833600000002`", "0.0022950415`", 
      RowBox[{"-", "0.056196054999999995`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->1356803757]
}, Open  ]],

Cell["\<\
Its QR (orthogonal and upper-triangular) components can also be extracted:\
\>", "ExampleText",
 CellID->1267649699],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RefinedValues", "[", 
   RowBox[{"logfile", ",", "\"\<U\>\""}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->156787626],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.881253`"}], "0.472077`", "0.02317`"},
     {"0.472641`", "0.879981`", "0.047369`"},
     {"0.001973`", "0.052695`", 
      RowBox[{"-", "0.998609`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[3]//MatrixForm=",
 CellID->2068921328]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RefinedValues", "[", 
   RowBox[{"logfile", ",", "\"\<B\>\""}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->167195313],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.049229`", "0.024615`", "0"},
     {"0", "0.042632`", "0"},
     {"0", "0", "0.056274`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[4]//MatrixForm=",
 CellID->1373564942]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->149314485],

Cell[BoxData[
 RowBox[{
  RowBox[{"logfile", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$StiansExamples", ",", "\"\<logfile.txt\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->398540861],

Cell[TextData[{
 "If no ",
 Cell[BoxData[
  StyleBox["label", "TI"]], "InlineFormula"],
 " is specified, all obtainable data will be returned (as if every ",
 Cell[BoxData[
  StyleBox["label", "TI"]], "InlineFormula"],
 " is entered in turn):"
}], "ExampleText",
 CellID->567054883],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RefinedValues", "[", "logfile", "]"}], "//", "Dataset"}]], "Input",\

 CellLabel->"In[2]:=",
 CellID->76214183],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 10, "InitialType" -> 
        TypeSystem`Struct[{
          "Refinement", "UnitCell", "Wavelength", "InstrumentModel", "UB", 
           "U", "B", "Mosaicity", "Angles", "CorrelationMatrix"}, {
           
           TypeSystem`Struct[{
            "ReflectionsInitial", "ReflectionsFinal", "Rint"}, {
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Assoc[
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "a", "b", "c", "\[Alpha]", "\[Beta]", "\[Gamma]"]], 
            TypeSystem`Atom[String], 6], 
           TypeSystem`Atom[Real], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Real], TypeSystem`AnyLength], 3], 
           TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[Real], 3], 3], 
           TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[Real], 3], 3], 
           TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[Real], 3], 3], TypeSystem`AnyType, 
           TypeSystem`Assoc[
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "\[Alpha]", "\[Beta]", "\[Theta]", "\[Kappa]", "\[Phi]", 
              "\[Omega]"]], 
            TypeSystem`Atom[Real], 6], 
           TypeSystem`Vector[
            TypeSystem`Vector[TypeSystem`AnyType, 10], 2]}], "Shape" -> 
        TypeSystem`PackageScope`DocumentShape[
          
          Association[{"Refinement", "ReflectionsInitial"} -> 
           TypeSystem`PackageScope`AtomShape[34], {
            "Refinement", "ReflectionsFinal"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"Refinement", "Rint"} -> 
           TypeSystem`PackageScope`AtomShape[60], {"UnitCell"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"Wavelength"} -> 
           TypeSystem`PackageScope`AtomShape[60], {"InstrumentModel"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"UB"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"U"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"B"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"Mosaicity"} -> 
           TypeSystem`PackageScope`UnknownShape, {"Angles"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"CorrelationMatrix"} -> 
           TypeSystem`PackageScope`ElidedShape[1]], 2], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[2093836794], "Type" -> 
        TypeSystem`Struct[{
          "Refinement", "UnitCell", "Wavelength", "InstrumentModel", "UB", 
           "U", "B", "Mosaicity", "Angles", "CorrelationMatrix"}, {
           
           TypeSystem`Struct[{
            "ReflectionsInitial", "ReflectionsFinal", "Rint"}, {
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Assoc[
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "a", "b", "c", "\[Alpha]", "\[Beta]", "\[Gamma]"]], 
            TypeSystem`Atom[String], 6], 
           TypeSystem`Atom[Real], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Real], TypeSystem`AnyLength], 3], 
           TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[Real], 3], 3], 
           TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[Real], 3], 3], 
           TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[Real], 3], 3], TypeSystem`AnyType, 
           TypeSystem`Assoc[
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "\[Alpha]", "\[Beta]", "\[Theta]", "\[Kappa]", "\[Phi]", 
              "\[Omega]"]], 
            TypeSystem`Atom[Real], 6], 
           TypeSystem`Vector[
            TypeSystem`Vector[TypeSystem`AnyType, 10], 2]}], "HandleQ" -> 
        True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[2093836794]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Refinement\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Refinement\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1132777256][{"Refinement", "ReflectionsInitial"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["Refinement", "ReflectionsInitial"]],
                  "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ReflectionsInitial\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ReflectionsInitial\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1132777256][{"Refinement", "ReflectionsInitial"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["Refinement", "ReflectionsInitial"]],
                  "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8569"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["Refinement", "ReflectionsInitial"]],
                  "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ReflectionsFinal\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ReflectionsFinal\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1132777256][{"Refinement", "ReflectionsFinal"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["Refinement", "ReflectionsFinal"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5957"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["Refinement", "ReflectionsFinal"]], 
                 "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Rint\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Rint\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1132777256][{"Refinement", "Rint"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["Refinement", "Rint"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.003155"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["Refinement", "Rint"]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"UnitCell\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"UnitCell\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1132777256][{"UnitCell"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["UnitCell"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[
                    Association[
                    "a" -> "16.37255", "b" -> "16.37255", "c" -> "12.4054", 
                    "\[Alpha]" -> "90.0", "\[Beta]" -> "90.0", "\[Gamma]" -> 
                    "120.0"], ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[
                    "a" -> "16.37255", "b" -> "16.37255", "c" -> "12.4054", 
                    "\[Alpha]" -> "90.0", "\[Beta]" -> "90.0", "\[Gamma]" -> 
                    "120.0"], ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1132777256][{"UnitCell"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["UnitCell"]], "Mouse"]]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Wavelength\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Wavelength\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1132777256][{"Wavelength"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["Wavelength"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], SpanFromLeft, 
               Pane[
                Annotation[
                 RawBoxes["0.698105"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["Wavelength"]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"InstrumentModel\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"InstrumentModel\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1132777256][{"InstrumentModel"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["InstrumentModel"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}],
                SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"Rotation", "Goniometer", "Detector"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"Rotation", "Goniometer", "Detector"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1132777256][{"InstrumentModel"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["InstrumentModel"]], "Mouse"], 
                BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"UB\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"UB\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1132777256][{"UB"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["UB"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 3], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 3], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1132777256][{"UB"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["UB"]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"U\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"U\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1132777256][{"U"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["U"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 3], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 3], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1132777256][{"U"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["U"]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"B\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"B\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1132777256][{"B"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["B"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 3], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 3], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1132777256][{"B"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["B"]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Mosaicity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Mosaicity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1132777256][{"Mosaicity"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["Mosaicity"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], SpanFromLeft, 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Null", FontFamily -> "Courier", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["Mosaicity"]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Angles\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Angles\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1132777256][{"Angles"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["Angles"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[
                    Association[
                    "\[Alpha]" -> 50., "\[Beta]" -> 0., "\[Omega]" -> 90., 
                    "\[Theta]" -> 0., "\[Kappa]" -> 0., "\[Phi]" -> 0.], 
                    ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[
                    "\[Alpha]" -> 50., "\[Beta]" -> 0., "\[Omega]" -> 90., 
                    "\[Theta]" -> 0., "\[Kappa]" -> 0., "\[Phi]" -> 0.], 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1132777256][{"Angles"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["Angles"]], "Mouse"]]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CorrelationMatrix\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CorrelationMatrix\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1132777256][{"CorrelationMatrix"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["CorrelationMatrix"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}],
                SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 2], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 2], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1132777256][{"CorrelationMatrix"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
                  GeneralUtilities`Slice["CorrelationMatrix"]], "Mouse"], 
                BaseStyle -> {
                  GrayLevel[0.5]}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1132777256][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1132777256]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1132777256][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {654., {144.3544921875, 149.6455078125}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellLabel->"Out[2]=",
 CellID->231368683]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Scope",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1293636265],

Cell[CellGroupData[{

Cell[TextData[{
 "\"CorrelationMatrix\"",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->474958664],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"tags", ",", "m"}], "}"}], "=", 
  RowBox[{"RefinedValues", "[", 
   RowBox[{"logfile", ",", "\"\<CorrelationMatrix\>\""}], "]"}]}]], "Input",
 CellLabel->"In[1]:=",
 CellID->898689103],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"dd\"\>", ",", "\<\"x0\"\>", ",", "\<\"y0\"\>", 
     ",", "\<\"d1\"\>", ",", "\<\"d2\"\>", ",", "\<\"d3\"\>", 
     ",", "\<\"b2\"\>", ",", "\<\"r1\"\>", ",", "\<\"r2\"\>", 
     ",", "\<\"r3\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1.`", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.57`", ",", "1.`", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.`", ",", "0.02`", ",", "1.`", ",", "0", ",", "0", ",", "0", ",", "0",
        ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", 
       RowBox[{"-", "0.01`"}], ",", 
       RowBox[{"-", "0.41`"}], ",", "1.`", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", 
       RowBox[{"-", "0.01`"}], ",", 
       RowBox[{"-", "0.81`"}], ",", "0.33`", ",", "1.`", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.86`", ",", "0.87`", ",", "0.01`", ",", "0.`", ",", 
       RowBox[{"-", "0.01`"}], ",", "1.`", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.`", ",", "0.`", ",", "0.14`", ",", "0.21`", ",", "0.37`", ",", "0.`",
        ",", "1.`", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "0.59`", ",", 
       RowBox[{"-", "0.18`"}], ",", "0.`", ",", 
       RowBox[{"-", "0.3`"}], ",", "1.`", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", 
       RowBox[{"-", "0.01`"}], ",", 
       RowBox[{"-", "0.08`"}], ",", "0.27`", ",", "0.`", ",", "0.45`", ",", 
       RowBox[{"-", "0.29`"}], ",", "1.`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.06`"}], ",", "0.24`", ",", "0.`", ",", "0.01`", ",", 
       "0.01`", ",", "0.18`", ",", "0.02`", ",", "0.`", ",", "0.`", ",", 
       "1.`"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1]=",
 CellID->1600257865]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ArrayReshape", "[", 
     RowBox[{
      RowBox[{"Flatten", "@", 
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Transpose", "@", 
          RowBox[{"ArrayFlatten", "[", 
           RowBox[{"{", 
            RowBox[{"tags", ",", "m"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "tags"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "+", "1"}], ",", 
          RowBox[{"#", "+", "1"}]}], "}"}], "&"}], "@", 
       RowBox[{"Length", "@", "tags"}]}]}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0", "\[Rule]", "Null"}], ",", 
      RowBox[{"0.", "\[Rule]", "0"}], ",", 
      RowBox[{"1.", "\[Rule]", "1"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Dividers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"None", ",", "True"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "None", "}"}], ",", "True", ",", "None"}], "}"}]}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1015264770],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"dd\"\>", "1", "", "", "", "", "", "", "", "", ""},
    {"\<\"x0\"\>", "0.57`", "1", "", "", "", "", "", "", "", ""},
    {"\<\"y0\"\>", "0", "0.02`", "1", "", "", "", "", "", "", ""},
    {"\<\"d1\"\>", "0", 
     RowBox[{"-", "0.01`"}], 
     RowBox[{"-", "0.41`"}], "1", "", "", "", "", "", ""},
    {"\<\"d2\"\>", "0", 
     RowBox[{"-", "0.01`"}], 
     RowBox[{"-", "0.81`"}], "0.33`", "1", "", "", "", "", ""},
    {"\<\"d3\"\>", "0.86`", "0.87`", "0.01`", "0", 
     RowBox[{"-", "0.01`"}], "1", "", "", "", ""},
    {"\<\"b2\"\>", "0", "0", "0.14`", "0.21`", "0.37`", "0", "1", "", "", 
     ""},
    {"\<\"r1\"\>", "0", "0", "0", "0.59`", 
     RowBox[{"-", "0.18`"}], "0", 
     RowBox[{"-", "0.3`"}], "1", "", ""},
    {"\<\"r2\"\>", "0", "0", 
     RowBox[{"-", "0.01`"}], 
     RowBox[{"-", "0.08`"}], "0.27`", "0", "0.45`", 
     RowBox[{"-", "0.29`"}], "1", ""},
    {"\<\"r3\"\>", 
     RowBox[{"-", "0.06`"}], "0.24`", "0", "0.01`", "0.01`", "0.18`", "0.02`",
      "0", "0", "1"},
    {"", "\<\"dd\"\>", "\<\"x0\"\>", "\<\"y0\"\>", "\<\"d1\"\>", \
"\<\"d2\"\>", "\<\"d3\"\>", "\<\"b2\"\>", "\<\"r1\"\>", "\<\"r2\"\>", "\<\"r3\
\"\>"}
   },
   AutoDelete->False,
   GridBoxDividers->{
    "Columns" -> {None, True}, "Rows" -> {{None}, True, None}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[2]=",
 CellID->1456983872]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Options",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->2061341341],

Cell[CellGroupData[{

Cell[TextData[{
 "\"ConstrainedCell\"",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->1757724783],

Cell[TextData[{
 "Setting this option to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["True"]], "paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " will use lattice parameters of the constrained unit cell. As an example, \
consider the following extract from a log file:"
}], "ExampleText",
 CellID->1227282563],

Cell[BoxData[
 RowBox[{
  RowBox[{"logfile", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$StiansExamples", ",", "\"\<logfile.txt\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1886640734],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"StringCases", "[", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{"logfile", ",", "\"\<Text\>\""}], "]"}], ",", 
    RowBox[{"Shortest", "[", 
     RowBox[{"\"\<unit cell:\>\"", "~~", "__", "~~", "\"\<V\>\""}], "]"}]}], 
   "]"}], "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"-", "2"}], ";;"}], "]"}], "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1242178692],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"unit cell:\\n      16.3731(3)  16.3737(2)   12.40424(14)       \
\\n      89.9991(11) 89.9993(11) 120.0012(15)  \\n      V\"\>", 
   ",", "\<\"unit cell:\\n      16.37255(12) 16.37255(12)  12.4054(2)       \
\\n      90.0         90.0         120.0       \\n      V\"\>"}], 
  "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->1073728305]
}, Open  ]],

Cell["\<\
The two different unit cells above are the unconstrained and constrained unit \
cells, respectively.\
\>", "ExampleText",
 CellID->74100854],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefinedValues", "[", 
  RowBox[{"logfile", ",", "\"\<UnitCell\>\"", ",", 
   RowBox[{"\"\<ConstrainedCell\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->972322103],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"a\"\>", "\[Rule]", "\<\"16.37255\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"16.37255\"\>"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "\<\"12.4054\"\>"}], ",", 
   RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", "\<\"90.0\"\>"}], ",", 
   RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", "\<\"90.0\"\>"}], ",", 
   RowBox[{"\<\"\[Gamma]\"\>", "\[Rule]", "\<\"120.0\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->846536394]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefinedValues", "[", 
  RowBox[{"logfile", ",", "\"\<UnitCell\>\"", ",", 
   RowBox[{"\"\<ConstrainedCell\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",\

 CellLabel->"In[4]:=",
 CellID->1857815903],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"a\"\>", "\[Rule]", "\<\"16.3731\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"16.3737\"\>"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "\<\"12.40424\"\>"}], ",", 
   RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", "\<\"89.9991\"\>"}], ",", 
   RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", "\<\"89.9993\"\>"}], ",", 
   RowBox[{"\<\"\[Gamma]\"\>", "\[Rule]", "\<\"120.0012\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->658012583]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\"Uncertainties\"",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->1295379749],

Cell[TextData[{
 "With this option set to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["True"]], "paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", uncertainties will be returned in the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"x", ",", "\[Delta]x"}], "}"}], TraditionalForm]], "InlineMath"],
 " for each parameter ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]], "InlineMath"],
 " that ",
 StyleBox["CrysAlis",
  FontSlant->"Italic"],
 " provides uncertainty for."
}], "ExampleText",
 CellID->643974215],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RefinedValues", "[", 
    RowBox[{"logfile", ",", "\"\<UnitCell\>\"", ",", 
     RowBox[{"\"\<Uncertainties\>\"", "\[Rule]", "True"}]}], "]"}], "//", 
   "Normal"}], "//", "TableForm"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->921278121],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\<\"a\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"16.37255\"\>", ",", "0.00012`"}], "}"}]}]},
     {
      RowBox[{"\<\"b\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"16.37255\"\>", ",", "0.00012`"}], "}"}]}]},
     {
      RowBox[{"\<\"c\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"12.4054\"\>", ",", "0.0002`"}], "}"}]}]},
     {
      RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"90.0\"\>", ",", "0.`"}], "}"}]}]},
     {
      RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"90.0\"\>", ",", "0.`"}], "}"}]}]},
     {
      RowBox[{"\<\"\[Gamma]\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"120.0\"\>", ",", "0.`"}], "}"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[1]//TableForm=",
 CellID->768619455]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\"Units\"",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->1542656978],

Cell[TextData[{
 "When ",
 Cell[BoxData[
  RowBox[{"\"\<Units\>\"", "\[Rule]", "True"}]], "InlineFormula"],
 ", the values are returned as ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Quantity"]], "paclet:ref/Quantity"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "ExampleText",
 CellID->1149860669],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefinedValues", "[", 
  RowBox[{"logfile", ",", "\"\<UnitCell\>\"", ",", 
   RowBox[{"\"\<Units\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->662955615],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"a\"\>", "\[Rule]", 
    TemplateBox[{
     "\"16.24713\"", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
      "\"Angstroms\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", 
    TemplateBox[{
     "\"16.24713\"", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
      "\"Angstroms\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", 
    TemplateBox[{
     "\"12.3326\"", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
      "\"Angstroms\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", 
    TemplateBox[{"\"90.0\"", 
      RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
      "\"AngularDegrees\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", 
    TemplateBox[{"\"90.0\"", 
      RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
      "\"AngularDegrees\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"\[Gamma]\"\>", "\[Rule]", 
    TemplateBox[{"\"120.0\"", 
      RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
      "\"AngularDegrees\""},
     "QuantityPostfix"]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[1]=",
 CellID->1930203473]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Interactive Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1653164318],

Cell[BoxData[
 RowBox[{
  RowBox[{"logfile", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$StiansExamples", ",", "\"\<logfile.txt\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1754383459],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"RefinedValues", "[", 
    RowBox[{"logfile", ",", "\"\<UnitCell\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<ConstrainedCell\>\"", "\[Rule]", "choice1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Uncertainties\>\"", "\[Rule]", "choice2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Units\>\"", "\[Rule]", "choice3"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"choice1", ",", "True", ",", "\"\<ConstrainedCell\>\""}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"choice2", ",", "False", ",", "\"\<Uncertainties\>\""}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"choice3", ",", "False", ",", "\"\<Units\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1010274408]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " code",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->58745928],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RefinedValues", "::", "label"}], "=", 
   "\"\<\[LeftGuillemet]`1`\[RightGuillemet] is not a recognised \
label.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RefinedValues", "::", "log"}], "=", 
   "\"\<Search for log files has failed.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RefinedValues", "::", "residue"}], "=", 
   "\"\<No residue value found.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RefinedValues", "::", "matrix"}], "=", 
   "\"\<No `1` matrix was found.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RefinedValues", "::", "mosaicity"}], "=", 
   "\"\<No mosaicity values found in \
\[LeftGuillemet]`1`\[RightGuillemet].\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RefinedValues", "::", "wavelength"}], "=", 
    "\"\<No wavelength found in \[LeftGuillemet]`1`\[RightGuillemet].\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RefinedValues", "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<ConstrainedCell\>\"", "\[Rule]", "True"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Uncertainties\>\"", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Units\>\"", "\[Rule]", "False"}]}], "}"}]}], 
  ";"}]}], "Input",
 Background->GrayLevel[0.85],
 CellLabel->"In[1]:=",
 CellID->1847941724],

Cell[BoxData[
 RowBox[{
  RowBox[{"RefinedValues", "[", 
   RowBox[{"input_String", ",", "label_String", ",", 
    RowBox[{"OptionsPattern", "@", "RefinedValues"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "Setup", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
     "files", ",", "import", ",", "\[IndentingNewLine]", "constrained", ",", 
      "uncertainties", ",", "units", ",", "\[IndentingNewLine]", "allvalues", 
      ",", "take", ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"'", 
        RowBox[{"Refinement", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      "n0", ",", "n", ",", "r", ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"'", 
        RowBox[{"Wavelength", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      "\[Lambda]", ",", "c", ",", "cInverse", ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"'", 
        RowBox[{"InstrumentModel", "'"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", "lattice", ",", "latticeU", ",", "X", ",", "x", 
      ",", "\[Delta]", ",", "\[IndentingNewLine]", "goniometer", ",", 
      "detector", ",", "rotation", ",", "instrument", ",", "parameters", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"'", 
         RowBox[{"UB", "'"}]}], ",", " ", 
        RowBox[{"'", 
         RowBox[{"U", "'"}], " ", 
         RowBox[{"and", " ", "'"}], 
         RowBox[{"B", "'"}]}]}], " ", "*)"}], "\[IndentingNewLine]", "UB", 
      ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"'", 
        RowBox[{"Angles", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", "num", 
      ",", "angles", ",", "\[Alpha]\[Beta]", ",", "\[Omega]", ",", "\[Theta]",
       ",", "\[Kappa]", ",", "\[Phi]", ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"'", 
        RowBox[{"CorrelationMatrix", "'"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", "m", ",", "tags", ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "Miscellaneous", " ", "*)"}], "\[IndentingNewLine]", 
      "temp"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"--", "-"}], "*", " ", "Setup", " ", "*", 
      RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", "\t", 
    RowBox[{"(*", " ", 
     RowBox[{"Label", " ", "check"}], " ", "*)"}], "\[IndentingNewLine]", 
    "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", "\t", 
           RowBox[{
           "\"\<Refinement\>\"", ",", "\"\<UnitCell\>\"", ",", 
            "\"\<Wavelength\>\"", ",", "\[IndentingNewLine]", "\t", 
            "\"\<InstrumentModel\>\"", ",", "\"\<UB\>\"", ",", "\"\<U\>\"", 
            ",", "\"\<B\>\"", ",", "\"\<Mosaicity\>\"", ",", 
            "\[IndentingNewLine]", "\t", "\"\<Angles\>\"", ",", 
            "\"\<CorrelationMatrix\>\""}], "}"}], ",", "label"}], "]"}]}], 
       ",", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"RefinedValues", "::", "label"}], ",", "label"}], "]"}], 
        ";", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Input", " ", "check"}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Scenario", " ", "1"}], ":", " ", 
       RowBox[{"Log", " ", "information", " ", "given", " ", "directly"}]}], 
      " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
     RowBox[{"Quiet", "@", 
      RowBox[{"If", "[", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{"input", ",", "27"}], "]"}], "\[Equal]", 
         "\"\<Your current setup file is:\>\""}], ",", "\[IndentingNewLine]", 
        "\t\t", 
        RowBox[{
         RowBox[{"import", "=", "input"}], ";", "\[IndentingNewLine]", "\t\t", 
         RowBox[{"Goto", "[", "\"\<ImportDone\>\"", "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Scenario", " ", "2"}], ":", " ", 
       RowBox[{"Single", " ", "log", " ", "file", " ", "given"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FileExistsQ", "[", "input", "]"}], "&&", 
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{"input", ",", 
           RowBox[{"-", "3"}]}], "]"}], "\[Equal]", "\"\<txt\>\""}]}], ",", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"import", "=", 
         RowBox[{"Import", "[", 
          RowBox[{"input", ",", "\"\<String\>\""}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Goto", "[", "\"\<ImportDone\>\"", "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Scenario", " ", "3"}], ":", " ", 
       RowBox[{"Log", "-", " ", 
        RowBox[{"or", " ", "project", " ", "directory", " ", "given"}]}]}], 
      " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
     RowBox[{"files", "=", 
      RowBox[{"FileNames", "[", 
       RowBox[{"\"\<*.txt\>\"", ",", 
        RowBox[{"{", "input", "}"}], ",", "3"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DirectoryQ", "[", "input", "]"}], "&&", 
        RowBox[{"files", "\[NotEqual]", 
         RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"import", "=", 
         RowBox[{"MergeLogs", "[", "input", "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Goto", "[", "\"\<ImportDone\>\"", "]"}]}]}], "]"}], ";", 
     "\t\t", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Finding", " ", "log", " ", "failed"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t\t\t", 
     RowBox[{"Message", "[", 
      RowBox[{"RefinedValues", "::", "log"}], "]"}], ";", 
     "\[IndentingNewLine]", "\t\t\t", 
     RowBox[{"Goto", "[", "\"\<End\>\"", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Preparations", " ", "common", " ", "for", " ", "all", " ", "tasks"}], 
      " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"Label", "[", "\"\<ImportDone\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"(*", " ", "Options", " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
     RowBox[{"constrained", "=", 
      RowBox[{"OptionValue", "[", "\"\<ConstrainedCell\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"uncertainties", "=", 
      RowBox[{"OptionValue", "[", "\"\<Uncertainties\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"units", "=", 
      RowBox[{"OptionValue", "[", "\"\<Units\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Making", " ", "a", " ", "list", " ", "to", " ", "store", " ", "all", 
       " ", "the", " ", "values", " ", "in"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"allvalues", "=", 
      RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Goto", "[", "label", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "-"}], "*", " ", "'", 
       RowBox[{"Refinement", "'"}], " ", "*", 
       RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "\"\<Refinement\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "Extracting", " ", "the", " ", "number", " ", "of", " ", 
        "reflections"}], ",", " ", 
       RowBox[{"initially", " ", "and", " ", "finally"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"n0", "=", 
      RowBox[{"First", "@", 
       RowBox[{"StringCases", "[", 
        RowBox[{"import", ",", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"Shortest", "[", 
           RowBox[{
           "\"\<UB fit with \>\"", "~~", "__", "~~", "\"\<out of \>\"", "~~", 
            
            RowBox[{"n0", ":", 
             RowBox[{"DigitCharacter", ".."}]}], "~~", "\"\< \>\""}], "]"}], 
          "\[RuleDelayed]", "n0"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"n", "=", 
      RowBox[{"Last", "@", 
       RowBox[{"StringCases", "[", 
        RowBox[{"import", ",", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"Shortest", "[", 
           RowBox[{"\"\<UB fit with \>\"", "~~", 
            RowBox[{"n", ":", 
             RowBox[{"DigitCharacter", ".."}]}], "~~", "\"\< \>\""}], "]"}], 
          "\[RuleDelayed]", "n"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n0", ",", "n"}], "}"}], "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"{", 
        RowBox[{"n0", ",", "n"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"allvalues", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<ReflectionsInitial\>\"", "\[Rule]", "n0"}], ",", 
         RowBox[{"\"\<ReflectionsFinal\>\"", "\[Rule]", "n"}]}], "}"}]}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Extracting", " ", "the", " ", "latest", " ", "residue", " ", 
       "parameter"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"r", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"import", ",", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"\"\<Resid:\>\"", "~~", 
          RowBox[{"\"\< \>\"", ".."}], "~~", 
          RowBox[{"r", ":", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"DigitCharacter", ",", "\"\<-\>\"", ",", "\"\<.\>\""}], 
             "}"}], ".."}]}]}], "\[RuleDelayed]", "r"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"r", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"RefinedValues", "::", "residue"}], "]"}], ";", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"r", "=", 
      RowBox[{"ToExpression", "@", 
       RowBox[{"Last", "@", "r"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Optional", ":", " ", "Units"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{"units", ",", 
       RowBox[{
        RowBox[{"r", "=", 
         RowBox[{"100", "*", "r"}]}], ";", 
        RowBox[{"r", "=", 
         RowBox[{"Quantity", "[", 
          RowBox[{"r", ",", "\"\<Percent\>\""}], "]"}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"allvalues", ",", 
       RowBox[{"\"\<Rint\>\"", "\[Rule]", "r"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "@", "allvalues"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "-"}], "*", " ", "'", 
       RowBox[{"UnitCell", "'"}], " ", "*", 
       RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "\"\<UnitCell\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Finding", " ", "and", " ", "extracting", " ", "the", " ", "lattice", 
       " ", "parameters"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"Quiet", "[", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"lattice", "=", 
        RowBox[{"StringCases", "[", 
         RowBox[{"import", ",", "\[IndentingNewLine]", "\t", 
          RowBox[{"Shortest", "[", 
           RowBox[{
           "\"\<unit cell:\>\"", "~~", "__", "~~", "\"\<V\>\"", "~~", "__", "~~",
             "EndOfLine"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Constrained", " ", "or", " ", "non"}], "-", 
         RowBox[{"constrained", " ", "cell"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{"constrained", ",", 
         RowBox[{"take", "=", 
          RowBox[{"-", "1"}]}], ",", 
         RowBox[{"take", "=", 
          RowBox[{"-", "2"}]}]}], "]"}], ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"lattice", "=", 
        RowBox[{
         RowBox[{"StringCases", "[", 
          RowBox[{
           RowBox[{"lattice", "[", 
            RowBox[{"[", "take", "]"}], "]"}], ",", "\[IndentingNewLine]", 
           "\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "DigitCharacter", ",", "\"\<-\>\"", ",", "\"\<.\>\"", ",", 
              "\"\<(\>\"", ",", "\"\<)\>\""}], "}"}], ".."}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{";;", "6"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"latticeU", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"X", "=", 
           RowBox[{"StringCases", "[", 
            RowBox[{
             RowBox[{"lattice", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"DigitCharacter", ",", "\"\<-\>\"", ",", "\"\<.\>\""}],
                "}"}], ".."}]}], "]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
          
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "X", "]"}], "\[Equal]", "2"}], ",", 
            "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{"Uncertainty", " ", "given"}], " ", "*)"}], 
            "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{
             RowBox[{"x", "=", 
              RowBox[{"X", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             "\t\t\t", 
             RowBox[{"\[Delta]", "=", 
              RowBox[{"ToExpression", "@", 
               RowBox[{"X", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", "\t\t\t", 
             RowBox[{"temp", "=", 
              RowBox[{"StringLength", "@", 
               RowBox[{"First", "@", "\[IndentingNewLine]", "\t\t\t", 
                RowBox[{"StringCases", "[", 
                 RowBox[{"x", ",", 
                  RowBox[{
                   RowBox[{"\"\<.\>\"", "~~", 
                    RowBox[{"n", ":", 
                    RowBox[{"(", 
                    RowBox[{"DigitCharacter", ".."}], ")"}]}]}], 
                   "\[RuleDelayed]", "n"}]}], "]"}]}]}]}], ";", 
             "\[IndentingNewLine]", "\t\t\t", 
             RowBox[{"X", "=", 
              RowBox[{"{", 
               RowBox[{"x", ",", 
                RowBox[{"N", "[", 
                 RowBox[{"\[Delta]", "*", 
                  RowBox[{"10", "^", 
                   RowBox[{"(", 
                    RowBox[{"-", "temp"}], ")"}]}]}], "]"}]}], "}"}]}]}], ",",
             "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{"No", " ", "uncertainty"}], " ", "*)"}], 
            "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{"X", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"X", ",", "0."}], "}"}], "]"}]}]}], 
           "\[IndentingNewLine]", "\t\t\t", "]"}], ";", "\[IndentingNewLine]",
           "\t\t", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"latticeU", ",", "X"}], "]"}]}], ",", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "@", "lattice"}]}], "}"}]}], 
        "\[IndentingNewLine]", "\t\t", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{"Optional", ":", " ", "Units"}], " ", "*)"}], 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"temp", "=", 
        RowBox[{"<|", 
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\"", ",", 
             "\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\"", ",", 
             "\"\<\[Gamma]\>\""}], "}"}], "\[Rule]", "latticeU"}], "]"}], 
         "|>"}]}], ";", "\[IndentingNewLine]", "\t", 
       RowBox[{"If", "[", 
        RowBox[{"units", ",", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"lattice", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Quantity", "[", 
              RowBox[{"#", ",", "\"\<Angstroms\>\""}], "]"}], "&"}], "/@", 
            RowBox[{"temp", "[", 
             RowBox[{"[", 
              RowBox[{"{", 
               RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], 
               "}"}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", "\t", 
          RowBox[{"angles", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Quantity", "[", 
              RowBox[{"#", ",", "\"\<Degrees\>\""}], "]"}], "&"}], "/@", 
            RowBox[{"temp", "[", 
             RowBox[{"[", 
              RowBox[{"{", 
               RowBox[{
               "\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\"", ",", 
                "\"\<\[Gamma]\>\""}], "}"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"temp", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"lattice", ",", "angles"}], "]"}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{"Optional", ":", " ", "Uncertainties"}], " ", "*)"}], 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", "uncertainties"}], ",", 
         RowBox[{"temp", "=", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}], ";", "\t", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "@", "temp"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "-"}], "*", " ", "'", 
       RowBox[{"Wavelength", "'"}], " ", "*", 
       RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "\"\<Wavelength\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"temp", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"import", ",", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"\"\<wavelength: \>\"", "~~", 
          RowBox[{"\[Lambda]", ":", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"DigitCharacter", ",", "\"\<.\>\""}], "}"}], ".."}]}]}], 
         "\[RuleDelayed]", "\[Lambda]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"temp", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"temp", ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", "Check", " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"temp", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Exploit", " ", "that", " ", "UB", " ", "is", " ", "scaled", " ", 
         "by", " ", "wavelength"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
       
       RowBox[{
        RowBox[{"UB", "=", 
         RowBox[{"RefinedValues", "[", 
          RowBox[{"input", ",", "\"\<UB\>\""}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"cInverse", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"QRDecomposition", "@", "UB"}], ")"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\t", 
        RowBox[{"c", "=", 
         RowBox[{"ToExpression", "@", 
          RowBox[{
           RowBox[{"RefinedValues", "[", 
            RowBox[{"input", ",", "\"\<UnitCell\>\""}], "]"}], "[", 
           "\"\<c\>\"", "]"}]}]}], ";", "\[IndentingNewLine]", "\t", 
        RowBox[{"\[Lambda]", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{"c", "*", "cInverse"}], "]"}]}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{"Extract", " ", "directly"}], " ", "*)"}], 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"\[Lambda]", "=", 
        RowBox[{"ToExpression", "@", 
         RowBox[{"First", "@", 
          RowBox[{"Flatten", "@", "temp"}]}]}]}]}], "\[IndentingNewLine]", 
      "\t", "]"}], ";", "\t", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Optional", ":", " ", "Units"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{"units", ",", 
       RowBox[{"\[Lambda]", "=", 
        RowBox[{"Quantity", "[", 
         RowBox[{"\[Lambda]", ",", "\"\<Angstroms\>\""}], "]"}]}]}], "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "@", "\[Lambda]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "-"}], "*", " ", "'", 
       RowBox[{"InstrumentModel", "'"}], " ", "*", 
       RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "\"\<InstrumentModel\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Finding", " ", "and", " ", "extracting", " ", "goniometer", " ", "and",
        " ", "detector", " ", "data"}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t\t", 
     RowBox[{"rotation", "=", 
      RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
       "\"\<Cryst. Rot. X\>\"", ",", "\"\<Cryst. Rot. Y\>\"", ",", 
        "\"\<Cryst. Rot. Z\>\"", ",", "\[IndentingNewLine]", "\t\t", 
        "\"\<Cryst. Dance X\>\"", ",", "\"\<Cryst. Dance Y\>\"", ",", 
        "\"\<Cryst. Dance Z\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
     "\t\t", 
     RowBox[{"goniometer", "=", 
      RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
       "\"\<Beam. Rot. Y\>\"", ",", "\"\<Beam. Rot. Z\>\"", ",", 
        "\[IndentingNewLine]", "\t\t", "\"\<Alpha Value\>\"", ",", 
        "\"\<Beta Value\>\"", ",", "\[IndentingNewLine]", "\t\t", 
        "\"\<Omega Offset\>\"", ",", "\"\<Theta Offset\>\"", ",", 
        "\"\<Kappa Offset\>\"", ",", "\"\<Phi Offset\>\""}], "}"}]}], ";", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"detector", "=", 
      RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
       "\"\<Det. Rot. X\>\"", ",", "\"\<Det. Rot. Y\>\"", ",", 
        "\"\<Det. Rot. Z\>\"", ",", "\[IndentingNewLine]", "\t\t", 
        "\"\<Det. Offset X\>\"", ",", "\"\<Det. Offset Y\>\"", ",", 
        "\"\<Det. D. Scale\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
     "\t\t", 
     RowBox[{"instrument", "=", 
      RowBox[{"{", 
       RowBox[{"rotation", ",", "goniometer", ",", "detector"}], "}"}]}], ";",
      "\[IndentingNewLine]", "\t", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"Quiet", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{"parameters", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Last", "@", 
             RowBox[{"DeleteCases", "[", 
              RowBox[{
               RowBox[{"StringCases", "[", 
                RowBox[{"import", ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"#", "~~", 
                   RowBox[{"\"\< \>\"", ".."}], "~~", "\[IndentingNewLine]", 
                   RowBox[{"v1", ":", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "DigitCharacter", ",", "\"\<-\>\"", ",", "\"\<.\>\""}], 
                    "}"}], ".."}]}], "~~", 
                   RowBox[{"\"\< \>\"", ".."}], "~~", "\[IndentingNewLine]", 
                   RowBox[{"v2", ":", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "DigitCharacter", ",", "\"\<-\>\"", ",", "\"\<.\>\""}], 
                    "}"}], ".."}]}]}], "\[RuleDelayed]", "v2"}]}], "]"}], ",",
                "\[IndentingNewLine]", "\t", 
               RowBox[{"x_", "/;", 
                RowBox[{
                 RowBox[{"StringLength", "[", "x", "]"}], "\[LessEqual]", 
                 "5"}]}]}], "]"}]}], "&"}], "/@", "#"}], "&"}], "/@", 
         "instrument"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\t\t", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"allvalues", ",", "\[IndentingNewLine]", "\t\t", 
         RowBox[{"\"\<Rotation\>\"", "\[Rule]", 
          RowBox[{"Association", "@", "\[IndentingNewLine]", "\t\t", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\"\<r1\>\"", ",", "\"\<r2\>\"", ",", "\"\<r3\>\"", ",", 
               "\"\<w1\>\"", ",", "\"\<w2\>\"", ",", "\"\<w3\>\""}], "}"}], 
             "\[Rule]", "\[IndentingNewLine]", "\t\t", 
             RowBox[{"parameters", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", "\t", 
            "]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"allvalues", ",", "\[IndentingNewLine]", "\t\t", 
         RowBox[{"\"\<Goniometer\>\"", "\[Rule]", 
          RowBox[{"Association", "@", "\[IndentingNewLine]", "\t\t", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\"\<b2\>\"", ",", "\"\<b3\>\"", ",", "\"\<al\>\"", ",", 
               "\"\<be\>\"", ",", "\"\<o0\>\"", ",", "\"\<t0\>\"", ",", 
               "\"\<k0\>\"", ",", "\"\<p0\>\""}], "}"}], "\[Rule]", 
             "\[IndentingNewLine]", "\t\t", 
             RowBox[{"parameters", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "\t", 
            "]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"allvalues", ",", "\[IndentingNewLine]", "\t\t", 
         RowBox[{"\"\<Detector\>\"", "\[Rule]", 
          RowBox[{"Association", "@", "\[IndentingNewLine]", "\t\t", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\"\<d1\>\"", ",", "\"\<d2\>\"", ",", "\"\<d3\>\"", ",", 
               "\"\<x0\>\"", ",", "\"\<y0\>\"", ",", "\"\<dd\>\""}], "}"}], 
             "\[Rule]", "\[IndentingNewLine]", "\t\t", 
             RowBox[{"parameters", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]", "\t", 
            "]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "@", 
        RowBox[{"ToExpression", "@", "allvalues"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "-"}], "*", " ", "'", 
       RowBox[{"UB", "'"}], " ", "*", 
       RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "\"\<UB\>\"", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Extracting", " ", "the", " ", "UB", " ", "matrix"}], " ", 
      "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringContainsQ", "[", 
        RowBox[{"import", ",", 
         RowBox[{"\"\<UM S \>\"", "~~", 
          RowBox[{"{", 
           RowBox[{"\"\<-\>\"", ",", "DigitCharacter"}], "}"}]}]}], "]"}], 
       ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{"Preferred", " ", "pattern"}], " ", "*)"}], 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"UB", "=", 
        RowBox[{"Stians`CrysAlis`UBfix", "@", 
         RowBox[{"Last", "@", "\[IndentingNewLine]", "\t", 
          RowBox[{"StringCases", "[", 
           RowBox[{"import", ",", 
            RowBox[{"Shortest", "[", "\[IndentingNewLine]", "\t", 
             RowBox[{"\"\<UM S \>\"", "~~", 
              RowBox[{"{", 
               RowBox[{"\"\<-\>\"", ",", "DigitCharacter"}], "}"}], "~~", 
              "__", "~~", "EndOfLine"}], "]"}]}], "]"}]}]}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{"Other", " ", "method"}], " ", "*)"}], "\[IndentingNewLine]", 
       "\t\t", 
       RowBox[{"(*", " ", "Check", " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"StringContainsQ", "[", 
            RowBox[{"import", ",", "\"\<UB - matrix:\>\""}], "]"}]}], ",", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"RefinedValues", "::", "matrix"}], ",", "\"\<UB\>\""}], 
            "]"}], ";", 
           RowBox[{"Goto", "[", "\"\<End\>\"", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"UB", "=", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringCases", "[", 
             RowBox[{
              RowBox[{"Last", "@", "\[IndentingNewLine]", "\t", 
               RowBox[{"StringCases", "[", 
                RowBox[{"import", ",", 
                 RowBox[{
                  RowBox[{"Shortest", "[", 
                   RowBox[{
                   "\"\<UB - matrix:\>\"", "~~", "\[IndentingNewLine]", 
                    RowBox[{"m", ":", 
                    RowBox[{"(", 
                    RowBox[{"__", "~~", 
                    RowBox[{"Repeated", "[", 
                    RowBox[{
                    RowBox[{"EndOfLine", "~~", "__"}], ",", 
                    RowBox[{"{", "3", "}"}]}], "]"}]}], ")"}]}]}], "]"}], 
                  "\[RuleDelayed]", "m"}]}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "DigitCharacter", ",", "\"\<.\>\"", ",", "\"\<-\>\""}], "}"}],
                ".."}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"{", 
              RowBox[{
              "1", ",", "2", ",", "3", ",", "7", ",", "8", ",", "9", ",", 
               "13", ",", "14", ",", "15"}], "}"}], "]"}], "]"}], ",", "3"}], 
          "]"}]}]}]}], "\[IndentingNewLine]", "\t", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "@", 
      RowBox[{"ToExpression", "@", 
       RowBox[{"Chop", "[", 
        RowBox[{
         RowBox[{"ToExpression", "@", "UB"}], ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "5"}]]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "-"}], "*", " ", "'", 
       RowBox[{"U", "'"}], " ", 
       RowBox[{"or", " ", "'"}], 
       RowBox[{"B", "'"}], " ", "*", 
       RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "\"\<U\>\"", "]"}], ";", 
     RowBox[{"Label", "[", "\"\<B\>\"", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"x", "=", "label"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", "Check", " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"StringContainsQ", "[", 
         RowBox[{"import", ",", 
          RowBox[{"\"\< \>\"", "~~", "x", "~~", "\"\< - matrix\>\""}]}], 
         "]"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"RefinedValues", "::", "matrix"}], ",", "x"}], "]"}], ";", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"Goto", "[", "\"\<End\>\"", "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Extracting", " ", "the", " ", "matrix"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"temp", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"import", ",", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"Shortest", "[", 
          RowBox[{
          "\"\< \>\"", "~~", "x", "~~", "\"\< - matrix:\>\"", "~~", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"m", ":", 
            RowBox[{"(", 
             RowBox[{"__", "~~", 
              RowBox[{"Repeated", "[", 
               RowBox[{
                RowBox[{"EndOfLine", "~~", "__"}], ",", 
                RowBox[{"{", "4", "}"}]}], "]"}]}], ")"}]}]}], "]"}], 
         "\[RuleDelayed]", "m"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"temp", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{
        RowBox[{"Last", "@", "temp"}], ",", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"DigitCharacter", ",", "\"\<.\>\"", ",", "\"\<-\>\""}], 
          "}"}], ".."}]}], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"temp", "=", 
      RowBox[{"ToExpression", "@", 
       RowBox[{"Partition", "[", 
        RowBox[{"temp", ",", "3"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"temp", "=", 
      RowBox[{"Chop", "[", 
       RowBox[{"temp", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "@", "temp"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "-"}], "*", " ", "'", 
       RowBox[{"Mosaicity", "'"}], " ", "*", 
       RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "\"\<Mosaicity\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Extracting", " ", "the", " ", "mosaicities"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"(*", " ", "Check", " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"StringContainsQ", "[", 
         RowBox[{"import", ",", "\"\<Profile size analysis\>\""}], "]"}]}], 
       ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"RefinedValues", "::", "mosaicity"}], ",", 
          RowBox[{"FileNameTake", "@", "input"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Goto", "[", "\"\<End\>\"", "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", "\[IndentingNewLine]", "\t", 
     RowBox[{"temp", "=", 
      RowBox[{"Last", "@", 
       RowBox[{"StringCases", "[", 
        RowBox[{"import", ",", "\[IndentingNewLine]", "\t", 
         RowBox[{"Shortest", "[", 
          RowBox[{
          "\"\<Profile size analysis\>\"", "~~", "__", "~~", 
           "\"\<|\\n\\n\>\""}], "]"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"temp", "=", 
      RowBox[{"StringExtract", "[", 
       RowBox[{"temp", ",", 
        RowBox[{
         RowBox[{"-", "13"}], ";;"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"temp", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"temp", ",", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"DigitCharacter", ".."}], "~~", "\"\<.\>\"", "~~", 
         RowBox[{"DigitCharacter", ".."}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"temp", "=", 
      RowBox[{"ToExpression", "@", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", "temp"}], ",", "2"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Optional", ":", " ", "Units"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"temp", "=", 
      RowBox[{"Quantity", "[", 
       RowBox[{"temp", ",", "\"\<Degrees\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"temp", "=", 
      RowBox[{"Association", "@", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<e1\>\"", ",", "\"\<e2\>\"", ",", "\"\<e3\>\""}], "}"}],
          "\[Rule]", "temp"}], "]"}]}]}], ";", "\[IndentingNewLine]", "\t", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Optional", ":", " ", "Uncertainties"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"OptionValue", "[", "\"\<Uncertainties\>\"", "]"}]}], ",", 
       RowBox[{"temp", "=", 
        RowBox[{"temp", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "@", "temp"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "-"}], "*", " ", "'", 
       RowBox[{"Angles", "'"}], " ", "*", 
       RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "\"\<Angles\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Extracting", " ", "the", " ", "diffractometer", " ", "angles"}], " ", 
      "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"temp", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ToExpression", "@", 
         RowBox[{"Last", "@", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{
            RowBox[{"StringCases", "[", 
             RowBox[{"import", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"#", "~~", 
                RowBox[{"\"\< \>\"", ".."}], "~~", "\[IndentingNewLine]", 
                RowBox[{"v1", ":", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "DigitCharacter", ",", "\"\<-\>\"", ",", "\"\<.\>\""}], 
                   "}"}], ".."}]}], "~~", 
                RowBox[{"\"\< \>\"", ".."}], "~~", "\[IndentingNewLine]", 
                RowBox[{"v2", ":", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "DigitCharacter", ",", "\"\<-\>\"", ",", "\"\<.\>\""}], 
                   "}"}], ".."}]}]}], "\[RuleDelayed]", "v2"}]}], "]"}], ",", 
            "\[IndentingNewLine]", "\t", 
            RowBox[{"x_", "/;", 
             RowBox[{
              RowBox[{"StringLength", "[", "x", "]"}], "\[LessEqual]", 
              "5"}]}]}], "]"}]}]}], "&"}], "/@", "\[IndentingNewLine]", "\t", 
       
       RowBox[{"{", 
        RowBox[{"\"\<Alpha Value\>\"", ",", "\"\<Beta Value\>\""}], "}"}]}]}],
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Extracting", " ", "the", " ", "goniometer", " ", "angles"}], 
      " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"num", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"DigitCharacter", ",", "\"\<.\>\"", ",", "\"\<-\>\""}], "}"}],
        ".."}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"temp", ",", 
       RowBox[{"ToExpression", "@", 
        RowBox[{"First", "@", 
         RowBox[{"StringCases", "[", 
          RowBox[{"import", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\"\<om=\>\"", "~~", "Whitespace", "~~", 
             RowBox[{"\[Omega]", ":", "num"}], "~~", 
             RowBox[{"WhitespaceCharacter", "..."}], "\[IndentingNewLine]", 
             "~~", "\"\<th=\>\"", "~~", "Whitespace", "~~", 
             RowBox[{"\[Theta]", ":", "num"}], "~~", 
             RowBox[{"WhitespaceCharacter", "..."}], "\[IndentingNewLine]", 
             "~~", "\"\<ka=\>\"", "~~", "Whitespace", "~~", 
             RowBox[{"\[Kappa]", ":", "num"}], "~~", 
             RowBox[{"WhitespaceCharacter", "..."}], "\[IndentingNewLine]", 
             "~~", "\"\<ph=\>\"", "~~", "Whitespace", "~~", 
             RowBox[{"\[Phi]", ":", "num"}], "~~", 
             RowBox[{"WhitespaceCharacter", "..."}]}], "\[IndentingNewLine]", 
            "\[RuleDelayed]", 
            RowBox[{"{", 
             RowBox[{
             "\[Omega]", ",", "\[Theta]", ",", "\[Kappa]", ",", "\[Phi]"}], 
             "}"}]}]}], "]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     
     RowBox[{"temp", "=", 
      RowBox[{"Flatten", "@", "temp"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Optional", ":", " ", "Units"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{"units", ",", 
       RowBox[{"temp", "=", 
        RowBox[{"Quantity", "[", 
         RowBox[{"temp", ",", "\"\<Degrees\>\""}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"temp", "=", 
      RowBox[{"Association", "@", "\[IndentingNewLine]", "\t", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\"", ",", "\"\<\[Omega]\>\"",
            ",", "\"\<\[Theta]\>\"", ",", "\"\<\[Kappa]\>\"", ",", 
           "\"\<\[Phi]\>\""}], "}"}], "\[Rule]", "temp"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "@", "temp"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "-"}], "*", " ", "'", 
       RowBox[{"CorrelationMatrix", "'"}], " ", "*", 
       RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "\"\<CorrelationMatrix\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"temp", "=", 
      RowBox[{"Last", "@", 
       RowBox[{"StringTrim", "@", 
        RowBox[{"StringCases", "[", 
         RowBox[{"import", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Shortest", "[", 
            RowBox[{
            "\"\<Correlation matrix:\>\"", "~~", "x__", "\[IndentingNewLine]",
              "\t", "~~", "\"\<                 \>\""}], "]"}], 
           "\[RuleDelayed]", "x"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"tags", "=", 
      RowBox[{"StringTrim", "@", 
       RowBox[{"StringCases", "[", 
        RowBox[{"temp", ",", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"x", ":", 
           RowBox[{"(", 
            RowBox[{"LetterCharacter", "~~", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "LetterCharacter", ",", "\"\< \>\"", ",", "\"\<.\>\"", ",", 
                "\"\<*\>\""}], "}"}], ".."}]}], ")"}]}], "\[RuleDelayed]", 
          "x"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"tags", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"tags", ",", 
        RowBox[{"{", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"\"\<Det. D. Scale\>\"", "\[Rule]", "\"\<dd\>\""}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"\"\<Det. Offset X\>\"", "\[Rule]", "\"\<x0\>\""}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"\"\<Det. Offset Y\>\"", "\[Rule]", "\"\<y0\>\""}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"\"\<Det. Rot. X\>\"", "\[Rule]", "\"\<d1\>\""}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"\"\<Det. Rot. Y\>\"", "\[Rule]", "\"\<d2\>\""}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"\"\<Det. Rot. Z\>\"", "\[Rule]", "\"\<d3\>\""}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"\"\<Beam. Rot. Y\>\"", "\[Rule]", "\"\<b2\>\""}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"\"\<Beam. Rot. Z\>\"", "\[Rule]", "\"\<b3\>\""}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"\"\<Cryst. Rot. X\>\"", "\[Rule]", "\"\<r1\>\""}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"\"\<Cryst. Rot. Y\>\"", "\[Rule]", "\"\<r2\>\""}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"\"\<Cryst. Rot. Z\>\"", "\[Rule]", "\"\<r3\>\""}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"\"\<Rec. latt. \>\"", "~~", "x__"}], "\[RuleDelayed]", 
           "x"}]}], "\[IndentingNewLine]", "\t", "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"temp", "=", 
      RowBox[{"StringTrim", "@", 
       RowBox[{"StringCases", "[", 
        RowBox[{"temp", ",", 
         RowBox[{"Shortest", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<-\>\"", ",", "DigitCharacter"}], "}"}], "~~", "__", "~~",
            "EndOfLine"}], "]"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"temp", "=", 
      RowBox[{"ToExpression", "/@", 
       RowBox[{"StringSplit", "[", 
        RowBox[{"temp", ",", "Whitespace"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"m", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"PadRight", "[", 
         RowBox[{"temp", ",", 
          RowBox[{"{", 
           RowBox[{"#", ",", "#"}], "}"}]}], "]"}], "&"}], "@", 
       RowBox[{"Length", "@", "tags"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"tags", ",", "m"}], "}"}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "-"}], "*", " ", "Return", " ", "message", " ", "and", 
       " ", "end", " ", "procedure", " ", "*", 
       RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "\"\<End\>\"", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[2]:=",
 CellID->1220793574],

Cell[BoxData[
 RowBox[{
  RowBox[{"RefinedValues", "[", 
   RowBox[{"input_String", ",", 
    RowBox[{"OptionsPattern", "@", "RefinedValues"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "log", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"log", "=", 
      RowBox[{"MergeLogs", "@", "input"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Association", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Quiet", "[", 
         RowBox[{"#", "\[Rule]", 
          RowBox[{"RefinedValues", "[", 
           RowBox[{"log", ",", "#", ",", "\[IndentingNewLine]", 
            RowBox[{"\"\<ConstrainedCell\>\"", "\[Rule]", 
             RowBox[{"OptionValue", "[", "\"\<ConstrainedCell\>\"", "]"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"\"\<Uncertainties\>\"", "\[Rule]", 
             RowBox[{"OptionValue", "[", "\"\<Uncertainties\>\"", "]"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"\"\<Units\>\"", "\[Rule]", 
             RowBox[{"OptionValue", "[", "\"\<Units\>\"", "]"}]}]}], 
           "\[IndentingNewLine]", "]"}]}], "]"}], "&"}], "/@", 
       RowBox[{"{", "\[IndentingNewLine]", "\t", 
        RowBox[{
        "\"\<Refinement\>\"", ",", "\"\<UnitCell\>\"", ",", 
         "\"\<Wavelength\>\"", ",", "\[IndentingNewLine]", "\t", 
         "\"\<InstrumentModel\>\"", ",", "\"\<UB\>\"", ",", "\"\<U\>\"", ",", 
         "\"\<B\>\"", ",", "\"\<Mosaicity\>\"", ",", "\[IndentingNewLine]", 
         "\t", "\"\<Angles\>\"", ",", "\"\<CorrelationMatrix\>\""}], "}"}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[3]:=",
 CellID->818834780]
}, Closed]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData["Stian's Mathematica package"]], 
   "paclet:Stians/guide/StiansOverview"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->2055074077]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"RefinedValues",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:Stians/guide/Stians", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> True, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2021, 4, 28, 13, 39, 53.677148}", 
    "history" -> {"0.1", "0.5.3", "", ""}, "context" -> "Stians`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Stians Symbol", "language" -> "en", "paclet" -> "Stians", "status" -> 
    "None", "summary" -> 
    "RefinedValues[input] extracts all relevant and obtainable data from \
input. RefinedValues[input, label] extracts parameters corresponding to label \
from input.", "synonyms" -> {}, "tabletags" -> {}, "title" -> "RefinedValues",
     "titlemodifier" -> "", "windowtitle" -> "RefinedValues", "type" -> 
    "Symbol", "uri" -> "Stians/ref/RefinedValues", "WorkflowDockedCell" -> 
    ""}, "SearchTextTranslated" -> "", "NewStyles" -> False},
CellContext->"Global`",
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "12.1 for Mac OS X x86 (64-bit) (June 19, 2020)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[20778, 571, 268, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"0e2ffe65-28f9-46c9-95d3-f9262dfee1e4",
   CellTags->"PrimaryExamplesSection",
   CellID->1123462809]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 137804, 3392}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[585, 21, 3050, 74, 70, "AnchorBarGrid",ExpressionUUID->"f03665c3-ba80-4866-9f57-e5a08913ebf5",
 CellID->1],
Cell[CellGroupData[{
Cell[3660, 99, 170, 6, 70, "ObjectNameGrid",ExpressionUUID->"730fde0b-57dd-4bf8-b6ed-f471f1c2d9f4"],
Cell[3833, 107, 1181, 37, 70, "Usage",ExpressionUUID->"640e284c-b814-4122-bda3-fe03bb1b997c",
 CellID->982511436]
}, Open  ]],
Cell[CellGroupData[{
Cell[5051, 149, 640, 19, 70, "NotesSection",ExpressionUUID->"50d102e5-7a39-4776-87db-ac2e027cdd34",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->34948920],
Cell[5694, 170, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"cf2c61c4-a31b-4b42-8912-ddbbf2078e87"],
Cell[5728, 172, 314, 10, 70, "Notes",ExpressionUUID->"2ae22f69-641a-497b-afcd-8af602616699",
 CellID->897722492],
Cell[6045, 184, 349, 10, 70, "Notes",ExpressionUUID->"f1a4335a-0449-438a-b3f3-6fa712f23a54",
 CellID->652208781],
Cell[6397, 196, 228, 7, 70, "Notes",ExpressionUUID->"b3fab6ea-3573-44d6-b2b3-d4ae12920d82",
 CellID->1412870300],
Cell[6628, 205, 1888, 46, 70, "2ColumnTableMod",ExpressionUUID->"add2fb84-74d2-4719-b829-59d4fb33ccd1",
 CellID->1088266505],
Cell[8519, 253, 403, 13, 70, "Notes",ExpressionUUID->"77682d0d-02a3-401c-a5c2-aad778d49251",
 CellID->1496548533],
Cell[8925, 268, 408, 10, 70, "Notes",ExpressionUUID->"5b7b04cc-c1c2-4e34-9d85-bb286e7d037d",
 CellID->1445824749],
Cell[9336, 280, 96, 1, 70, "Notes",ExpressionUUID->"302ae832-e423-4860-8919-cbdbcddacf03",
 CellID->489996585],
Cell[9435, 283, 1663, 30, 70, "3ColumnTableMod",ExpressionUUID->"c73d9cce-9f3d-484c-ad2a-a3d4fea0c2b5",
 CellID->1594329934],
Cell[11101, 315, 81, 1, 70, "Notes",ExpressionUUID->"36576b7a-bb27-40d4-bb71-a6ab9e7b29b7",
 CellID->1735315860],
Cell[11185, 318, 2073, 40, 70, "3ColumnTableMod",ExpressionUUID->"db40fa28-8ea8-4e27-a133-f76e355e3251",
 CellID->495210153],
Cell[13261, 360, 79, 1, 70, "Notes",ExpressionUUID->"a07bffcb-c1b5-4dd4-ab0d-7902e3c5f1d4",
 CellID->1085448127],
Cell[13343, 363, 1643, 30, 70, "3ColumnTableMod",ExpressionUUID->"c3531ba8-b1b8-42c5-bb9d-a9bf93467128",
 CellID->1078068979],
Cell[14989, 395, 63, 1, 70, "Notes",ExpressionUUID->"3bcb85e7-0b75-4ff1-8404-04f091600653",
 CellID->533145374],
Cell[15055, 398, 2202, 48, 70, "3ColumnTableMod",ExpressionUUID->"add3a3b5-23ce-40bb-ad87-ddb2acebc10d",
 CellID->1272525534],
Cell[17260, 448, 1088, 33, 70, "Notes",ExpressionUUID->"a8d28ed3-5ade-4fdb-b431-a4f9df8dc6ec",
 CellID->2144584843],
Cell[18351, 483, 110, 3, 70, "Notes",ExpressionUUID->"6e334168-38cc-47c3-8b72-23d1f83ee04d",
 CellID->1699689775],
Cell[18464, 488, 725, 15, 70, "3ColumnTableMod",ExpressionUUID->"71307c4d-8296-46aa-b4bf-9c67ffda97b5",
 CellID->1144728824],
Cell[19192, 505, 441, 15, 70, "Notes",ExpressionUUID->"760390c5-288a-4c01-a05f-620e1b0fed89",
 CellID->451284256],
Cell[19636, 522, 268, 9, 70, "Notes",ExpressionUUID->"29f574b4-b5cb-41a9-be1c-9a8b9b3c8bb2",
 CellID->1298561670],
Cell[19907, 533, 800, 31, 70, "Notes",ExpressionUUID->"80aaf2fb-19e5-4032-b964-bb6aaf808a53",
 CellID->1128229463],
Cell[20710, 566, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"e085598d-272f-4092-8699-1b487c61abcb"]
}, Closed]],
Cell[CellGroupData[{
Cell[20778, 571, 268, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"0e2ffe65-28f9-46c9-95d3-f9262dfee1e4",
 CellTags->"PrimaryExamplesSection",
 CellID->1123462809],
Cell[CellGroupData[{
Cell[21071, 585, 196, 6, 70, "ExampleSection",ExpressionUUID->"9e4fd5a0-4342-4aea-8536-b1f0c719d11c",
 CellID->1363206439],
Cell[21270, 593, 242, 8, 70, "Input",ExpressionUUID->"870e5989-2c0d-4f47-ab83-21326d0edf76",
 CellID->943849540],
Cell[21515, 603, 203, 8, 70, "ExampleText",ExpressionUUID->"92148cf6-144d-41dd-b12e-27280a537912",
 CellID->1977856555],
Cell[CellGroupData[{
Cell[21743, 615, 185, 6, 70, "Input",ExpressionUUID->"6a0aaa02-bee0-479a-87cc-4294ba33176e",
 CellID->1638640303],
Cell[21931, 623, 871, 23, 70, "Output",ExpressionUUID->"639f7f84-aae6-4584-8b95-2d4116e1d4bb",
 CellID->1356803757]
}, Open  ]],
Cell[22817, 649, 126, 3, 70, "ExampleText",ExpressionUUID->"b7b59f10-0840-48c9-874a-b2f731f6e7c2",
 CellID->1267649699],
Cell[CellGroupData[{
Cell[22968, 656, 183, 6, 70, "Input",ExpressionUUID->"c1476d8e-9b76-4472-ad3d-ab4890c8c4f4",
 CellID->156787626],
Cell[23154, 664, 788, 22, 70, "Output",ExpressionUUID->"ab6b12b4-2de3-4d68-b3a8-341fcdd9c547",
 CellID->2068921328]
}, Open  ]],
Cell[CellGroupData[{
Cell[23979, 691, 183, 6, 70, "Input",ExpressionUUID->"b2770f6a-70b6-4601-9a70-27e89c88eaee",
 CellID->167195313],
Cell[24165, 699, 705, 20, 70, "Output",ExpressionUUID->"62736d28-c409-48a2-aff5-96f86611e009",
 CellID->1373564942]
}, Open  ]],
Cell[CellGroupData[{
Cell[24907, 724, 125, 3, 70, "ExampleDelimiter",ExpressionUUID->"23c2faaa-a52e-4157-82d7-ea6b8aa46174",
 CellID->149314485],
Cell[25035, 729, 242, 8, 70, "Input",ExpressionUUID->"be5a420f-9706-4f92-a2ef-b38877ba0671",
 CellID->398540861],
Cell[25280, 739, 282, 9, 70, "ExampleText",ExpressionUUID->"5f5b921c-5041-490b-80ac-203c96a44adb",
 CellID->567054883],
Cell[CellGroupData[{
Cell[25587, 752, 146, 5, 70, "Input",ExpressionUUID->"9229e03f-7881-484e-9a7a-4da9c0674e70",
 CellID->76214183],
Cell[25736, 759, 42265, 839, 70, "Output",ExpressionUUID->"a183ff0e-f08c-4009-a120-7dee8a8b6b41",
 CellID->231368683]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[68062, 1605, 187, 6, 70, "ExampleSection",ExpressionUUID->"f4506d23-449c-4fa6-8db9-99e707ec2731",
 CellID->1293636265],
Cell[CellGroupData[{
Cell[68274, 1615, 208, 6, 70, "ExampleSubsection",ExpressionUUID->"ca03a6cc-dcc1-4d01-b3bb-0019b6851d4f",
 CellID->474958664],
Cell[CellGroupData[{
Cell[68507, 1625, 236, 7, 70, "Input",ExpressionUUID->"661fea07-9461-4731-910f-af98e41e752d",
 CellID->898689103],
Cell[68746, 1634, 2331, 55, 70, "Output",ExpressionUUID->"046d1a8c-ec9d-4ff3-80af-f29ae3d69e29",
 CellID->1600257865]
}, Open  ]],
Cell[CellGroupData[{
Cell[71114, 1694, 1293, 39, 70, "Input",ExpressionUUID->"4d2d231f-e660-49d2-a055-b445a6818b19",
 CellID->1015264770],
Cell[72410, 1735, 1449, 35, 70, "Output",ExpressionUUID->"160737e4-210e-47bc-bab6-7a5d2a4a0df5",
 CellID->1456983872]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[73920, 1777, 189, 6, 70, "ExampleSection",ExpressionUUID->"08e027aa-df1f-441c-ae98-cc78334f290d",
 CellID->2061341341],
Cell[CellGroupData[{
Cell[74134, 1787, 207, 6, 70, "ExampleSubsection",ExpressionUUID->"2c4b0c7d-6a98-467a-8e3c-02bf58f5b71b",
 CellID->1757724783],
Cell[74344, 1795, 362, 11, 70, "ExampleText",ExpressionUUID->"35d1c9d8-531e-48b1-8e67-22daddbcb44d",
 CellID->1227282563],
Cell[74709, 1808, 243, 8, 70, "Input",ExpressionUUID->"c47a4f74-dbcd-49e3-83c8-a552cf0f7697",
 CellID->1886640734],
Cell[CellGroupData[{
Cell[74977, 1820, 406, 13, 70, "Input",ExpressionUUID->"b0299e70-e541-46fe-8b5c-75ec97c208ec",
 CellID->1242178692],
Cell[75386, 1835, 382, 8, 70, "Output",ExpressionUUID->"da1098c3-6707-4f6c-8d32-a6b848aeeeff",
 CellID->1073728305]
}, Open  ]],
Cell[75783, 1846, 150, 4, 70, "ExampleText",ExpressionUUID->"51b01bdf-7904-40fd-bcec-83bb3a780240",
 CellID->74100854],
Cell[CellGroupData[{
Cell[75958, 1854, 218, 5, 70, "Input",ExpressionUUID->"32903da9-9966-4386-9ce5-8d0e7879094c",
 CellID->972322103],
Cell[76179, 1861, 520, 11, 70, "Output",ExpressionUUID->"f0912f66-e688-4224-8c31-c90b666b1723",
 CellID->846536394]
}, Open  ]],
Cell[CellGroupData[{
Cell[76736, 1877, 222, 6, 70, "Input",ExpressionUUID->"f600289f-3a0e-4634-98b1-9ca529e90ed0",
 CellID->1857815903],
Cell[76961, 1885, 528, 11, 70, "Output",ExpressionUUID->"80e8ae68-3af2-46c0-b8e9-07aa004dc074",
 CellID->658012583]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[77538, 1902, 205, 6, 70, "ExampleSubsection",ExpressionUUID->"909cb9b7-1293-4cb5-8d08-0cdd6de31119",
 CellID->1295379749],
Cell[77746, 1910, 582, 21, 70, "ExampleText",ExpressionUUID->"d5e924c3-4d97-4d38-a52c-d2d450fa4159",
 CellID->643974215],
Cell[CellGroupData[{
Cell[78353, 1935, 286, 8, 70, "Input",ExpressionUUID->"4cafed9a-e971-456d-ba42-f072de7f9a4d",
 CellID->921278121],
Cell[78642, 1945, 1372, 42, 70, "Output",ExpressionUUID->"199d023e-4bab-4a38-be81-4a35fe28b705",
 CellID->768619455]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[80063, 1993, 197, 6, 70, "ExampleSubsection",ExpressionUUID->"fb58e692-a8f1-467e-8d86-12be851d0501",
 CellID->1542656978],
Cell[80263, 2001, 346, 13, 70, "ExampleText",ExpressionUUID->"154392fd-85c4-4f2e-821f-4c476127e0f5",
 CellID->1149860669],
Cell[CellGroupData[{
Cell[80634, 2018, 208, 5, 70, "Input",ExpressionUUID->"c5777df4-b0b6-48e3-b56f-6c81cd519815",
 CellID->662955615],
Cell[80845, 2025, 1277, 34, 70, "Output",ExpressionUUID->"703b20dc-a4af-49c6-85f8-3af91444f2e5",
 CellID->1930203473]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[82183, 2066, 202, 6, 70, "ExampleSection",ExpressionUUID->"a1cd2b95-ceed-4767-925b-120db07ca4de",
 CellID->1653164318],
Cell[82388, 2074, 243, 8, 70, "Input",ExpressionUUID->"a35df100-5510-4dbe-9f05-8ccccfd4ef2e",
 CellID->1754383459],
Cell[82634, 2084, 1725, 44, 70, "Input",ExpressionUUID->"5dc752d6-4120-46b4-a6a4-ec61019442f0",
 CellID->1010274408]
}, Closed]],
Cell[CellGroupData[{
Cell[84396, 2133, 234, 8, 70, "ExampleSection",ExpressionUUID->"de05cb46-a7dc-41c4-8cc8-de4a87ab3635",
 CellID->58745928],
Cell[84633, 2143, 1539, 42, 70, "Input",ExpressionUUID->"b0cb41c7-9636-404f-a6fa-8f390fc5e7a6",
 CellID->1847941724],
Cell[86175, 2187, 47418, 1089, 70, "Input",ExpressionUUID->"b14e8bd6-5b05-4e77-ac60-faeda6fc7a6f",
 CellID->1220793574],
Cell[133596, 3278, 1742, 38, 70, "Input",ExpressionUUID->"5416a857-bac6-4044-b028-2ac7fc1d4477",
 CellID->818834780]
}, Closed]],
Cell[135353, 3319, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"d0063be4-4c04-4a72-83d6-c6e3609253d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135421, 3324, 156, 7, 70, "MoreAboutSection",ExpressionUUID->"67d2e498-da8b-430d-8843-f7e0abb01f5b",
 CellID->38303248],
Cell[135580, 3333, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"b8b53742-51db-46f5-96bc-97e6e9143196"],
Cell[135614, 3335, 201, 7, 70, "MoreAbout",ExpressionUUID->"ea4ef2b3-7c65-4a16-963f-a0c5c013c0c6",
 CellID->2055074077]
}, Open  ]],
Cell[135830, 3345, 23, 0, 70, "FooterCell",ExpressionUUID->"0e9a7f04-75f8-4c27-bfa8-96c7d4001ffb"]
}
]
*)

(* End of internal cache information *)
