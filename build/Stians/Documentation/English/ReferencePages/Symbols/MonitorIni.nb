(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     28050,        789]
NotebookOptionsPosition[     22158,        662]
NotebookOutlinePosition[     24585,        722]
CellTagsIndexPosition[     24500,        717]
WindowTitle->MonitorIni
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["STIANS SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Stian's Mathematica package\"\>":>
       Documentation`HelpLookup["paclet:Stians/guide/StiansOverview"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Stians/ref/MonitorIni\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["Stians/ref/MonitorIni"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/Stians/ref/MonitorIni.\
html"], StandardForm]], "Input", TextClipboardType -> "PlainText"]}, Visible -> 
            False]]; SelectionMove[
         DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$23410], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "Stians/ref/MonitorIni", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[CellGroupData[{

Cell[TextData[{
 Cell["MonitorIni", "ObjectName"],
 Cell[BoxData[
  TemplateBox[{8},
   "Spacer1"]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["MonitorIni"]], "paclet:Stians/ref/MonitorIni"},
        "RefLink",
        BaseStyle->{"InlineFormula"}], "[", 
       RowBox[{
        StyleBox["file", "TI"], ",", 
        StyleBox["input", "TI"]}], "]"}]], "InlineFormula"],
     " \[LineSeparator]substitutes the monitor values in the ",
     StyleBox[".ini", "Program"],
     " ",
     Cell[BoxData[
      StyleBox["file", "TI"]], "InlineFormula"],
     " with the values of ",
     Cell[BoxData[
      StyleBox["input", "TI"]], "InlineFormula"],
     "."
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["MonitorIni"]], "paclet:Stians/ref/MonitorIni"},
        "RefLink",
        BaseStyle->{"InlineFormula"}], "[", 
       RowBox[{
        StyleBox["file", "TI"], ",", 
        StyleBox["flux", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]substitutes the monitor values in the ",
     StyleBox[".ini", "Program"],
     " ",
     Cell[BoxData[
      StyleBox["file", "TI"]], "InlineFormula"],
     " with normalised values from the ",
     Cell[BoxData[
      StyleBox["flux", "TI"]], "InlineFormula"],
     " file."
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["MonitorIni"]], "paclet:Stians/ref/MonitorIni"},
        "RefLink",
        BaseStyle->{"InlineFormula"}], "[", 
       RowBox[{
        StyleBox["file", "TI"], ",", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["start", "TI"], ",", 
          StyleBox["stop", "TI"]}], "}"}]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]substitutes the monitor values in the ",
     StyleBox[".ini", "Program"],
     " ",
     Cell[BoxData[
      StyleBox["file", "TI"]], "InlineFormula"],
     " with automatically generated values going linearly from ",
     Cell[BoxData[
      StyleBox["start", "TI"]], "InlineFormula"],
     " to ",
     Cell[BoxData[
      StyleBox["stop", "TI"]], "InlineFormula"],
     "."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, None, {None}}}},
 CellID->982511436]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    TemplateBox[{6},
     "Spacer1"]]],
   "Details"
  }], "NotesFrameText"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->896916856],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[{
 "When the ",
 Cell[BoxData[
  RowBox[{"monitor", ".", "ini"}]], "InlineFormula"],
 " files are created with the ",
 StyleBox["xx monitorinifromrunlist", "InlineCode"],
 " command, all the monitor values are set to ",
 Cell[BoxData["1.000"], "InlineFormula"],
 ". This functions helps substituting these values."
}], "Notes",
 CellID->1067943069],

Cell[TextData[{
 "A new file is generated with ",
 Cell[BoxData["\"\<_new\>\""], "InlineFormula"],
 " appended to the input ",
 Cell[BoxData[
  StyleBox["file", "TI"]], "InlineFormula"],
 "."
}], "Notes",
 CellID->1281169926],

Cell["", "SectionFooterSpacer"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->1293880499],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->830137171],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ini", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$StiansExamples", ",", "\"\<monitor.ini\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newini", "=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{"ini", ",", 
     RowBox[{"\"\<monitor.ini\>\"", "\[Rule]", "\"\<monitor_new.ini\>\""}]}], 
    "]"}]}], ";"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->1094871088],

Cell[TextData[{
 "The custom input values may in principle be anything, as long as it is a \
list with the same length as the number of images in the ",
 StyleBox[".ini", "Program"],
 " file. Here, we simply use entries that go from ",
 Cell[BoxData["1"], "InlineFormula"],
 " to ",
 Cell[BoxData["720"], "InlineFormula"],
 " (the length of this example file):"
}], "ExampleText",
 CellID->2123744621],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MonitorIni", "[", 
   RowBox[{"ini", ",", 
    RowBox[{"Range", "@", "720"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Import", "@", "newini"}], "//", "Shallow"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->1027648522],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "\<\"[Monitor]\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_1.img=1\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_2.img=2\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_3.img=3\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_4.img=4\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_5.img=5\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_6.img=6\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_7.img=7\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_8.img=8\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_9.img=9\"\>", "}"}], ",", 
   RowBox[{"\[LeftSkeleton]", "711", "\[RightSkeleton]"}]}], "}"}]], "Output",\

 CellLabel->"Out[2]//Shallow=",
 CellID->644856443]
}, Open  ]],

Cell[TextData[{
 "Using the automated range method to automatically generate entries that \
vary linearly from ",
 Cell[BoxData["1.00"], "InlineFormula"],
 " to ",
 Cell[BoxData["0.75"], "InlineFormula"],
 ":"
}], "ExampleText",
 CellID->537111355],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MonitorIni", "[", 
   RowBox[{"ini", ",", 
    RowBox[{"{", 
     RowBox[{"1.00", ",", "0.75"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Import", "@", "newini"}], "//", "Shallow"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->1688044346],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "\<\"[Monitor]\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_1.img=1.\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_2.img=0.999652\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_3.img=0.999305\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_4.img=0.998957\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_5.img=0.998609\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_6.img=0.998261\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_7.img=0.997914\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_8.img=0.997566\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_9.img=0.997218\"\>", "}"}], ",", 
   RowBox[{"\[LeftSkeleton]", "711", "\[RightSkeleton]"}]}], "}"}]], "Output",\

 CellLabel->"Out[3]//Shallow=",
 CellID->1899754739]
}, Open  ]],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  StyleBox["input", "TI"]], "InlineFormula"],
 " may also be a flux file generated from the ",
 StyleBox["Header Extractor",
  FontSlant->"Italic"],
 " in the ",
 StyleBox["SNBL Toolbox",
  FontSlant->"Italic"],
 "."
}], "ExampleText",
 CellID->1066585501],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$StiansExamples", ",", "\"\<flux.dat\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MonitorIni", "[", 
   RowBox[{"ini", ",", "flux"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Import", "@", "newini"}], "//", "Shallow"}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->170422683],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "\<\"[Monitor]\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_1.img=0.991202\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_2.img=0.985893\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_3.img=0.988208\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_4.img=0.991322\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_5.img=0.991393\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_6.img=0.985249\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_7.img=0.991081\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_8.img=0.98939\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"Refined_binning5_1_9.img=0.989375\"\>", "}"}], ",", 
   RowBox[{"\[LeftSkeleton]", "711", "\[RightSkeleton]"}]}], "}"}]], "Output",\

 CellLabel->"Out[4]//Shallow=",
 CellID->391034777]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " code",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->887364112],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MonitorIni", "::", "InvInput"}], "=", 
   "\"\<The length og the custom input does not match that of the \
\!\(\*StyleBox[\".\", \"Program\"]\)\!\(\*StyleBox[\"ini\", \"Program\"]\) \
file (or invalid range).\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MonitorIni", "::", "InvFlux"}], "=", 
   "\"\<The flux file does not match the (length) of data.\>\""}], 
  ";"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->1802185616],

Cell[BoxData[
 RowBox[{
  RowBox[{"MonitorIni", "[", 
   RowBox[{
    RowBox[{"file_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"FileExtension", "[", "#", "]"}], "\[Equal]", "\"\<ini\>\""}],
        "&"}], ")"}]}], ",", "input_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "flux", ",", "Flux", ",", "linFrom", ",", "linTo", ",", "method", ",", 
      "import", ",", "end", ",", "prefix", ",", "L", ",", "seq", ",", 
      "newvalues", ",", "i", ",", "newdata", ",", "filename"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Basic", " ", "operations"}], " ", "*)"}], "\[IndentingNewLine]",
     "\t", 
    RowBox[{
     RowBox[{"import", "=", 
      RowBox[{"Check", "[", 
       RowBox[{
        RowBox[{"Import", "@", "file"}], ",", 
        RowBox[{"Abort", "[", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"end", "=", 
      RowBox[{"StringExtract", "[", 
       RowBox[{
        RowBox[{"import", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"\"\<_\>\"", "\[Rule]", 
         RowBox[{"-", "1"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"prefix", "=", 
      RowBox[{"StringTrim", "[", 
       RowBox[{
        RowBox[{"import", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"L", "=", 
      RowBox[{
       RowBox[{"Length", "@", "import"}], "-", "1"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"seq", "=", 
      RowBox[{"ToString", "/@", 
       RowBox[{"Range", "@", "L"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Checking", " ", "if", " ", "input", " ", "is", " ", "a", " ", "flux", 
       " ", "file"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "@", 
         RowBox[{"Head", "[", "input", "]"}]}], "\[Equal]", 
        "\"\<String\>\""}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"flux", "=", 
         RowBox[{"Check", "[", 
          RowBox[{
           RowBox[{"Import", "[", 
            RowBox[{"input", ",", "\"\<Data\>\""}], "]"}], ",", 
           RowBox[{"Abort", "[", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]",
         "\t\t", 
        RowBox[{"Flux", "=", 
         RowBox[{"Rest", "@", "flux"}]}], ";", "\[IndentingNewLine]", "\t\t", 
        
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "flux", "]"}], "\[Equal]", 
           RowBox[{"{", "\"\<Flux\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
          "\t\t", 
          RowBox[{
           RowBox[{"newvalues", "=", 
            RowBox[{"ToString", "/@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Flatten", "[", "Flux", "]"}], "/", 
               RowBox[{"N", "[", 
                RowBox[{"Max", "[", "Flux", "]"}], "]"}]}], ")"}]}]}], ";", 
           "\[IndentingNewLine]", "\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "Checking", " ", "if", " ", "the", " ", "flux", " ", "file", " ", 
             "is", " ", "correct"}], " ", "*)"}], "\[IndentingNewLine]", 
           "\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "newvalues"}], "\[NotEqual]", "L"}], ",", 
             RowBox[{
              RowBox[{"Message", "[", 
               RowBox[{"MonitorIni", "::", "InvFlux"}], "]"}], ";", 
              "\[IndentingNewLine]", "\t\t", 
              RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\t\t", 
           RowBox[{"Goto", "[", "\"\<ToNewData\>\"", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "\t\t", "]"}]}]}], "\[IndentingNewLine]", 
      "\t", "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Checking", " ", "input", " ", "for", " ", "method"}], " ", 
      "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"method", "=", "\"\<LinearDecay\>\""}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", 
         RowBox[{"Flatten", "@", "input"}]}], "\[Equal]", "2"}], ",", 
       RowBox[{
        RowBox[{"linFrom", "=", 
         RowBox[{"input", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"linTo", "=", 
         RowBox[{"input", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
       "\t", 
       RowBox[{"method", "=", "\"\<CustomInput\>\""}]}], 
      "\[IndentingNewLine]", "\t", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Writing", " ", "new", " ", "data"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"method", "\[Equal]", "\"\<CustomInput\>\""}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"newvalues", "=", 
         RowBox[{"ToString", "/@", "input"}]}], ";", "\[IndentingNewLine]", 
        "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"Checking", " ", "the", " ", "custom", " ", "input"}], " ", 
         "*)"}], "\[IndentingNewLine]", "\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", "newvalues"}], "\[NotEqual]", "L"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"MonitorIni", "::", "InvInput"}], "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"newvalues", "=", 
        RowBox[{"ToString", "/@", 
         RowBox[{"Reverse", "@", 
          RowBox[{"Check", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"i", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "linTo", ",", "linFrom", ",", 
                RowBox[{"N", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"linFrom", "-", "linTo"}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"L", "-", "1"}], ")"}]}], "]"}]}], "}"}]}], "]"}], 
            ",", 
            RowBox[{"Abort", "[", "]"}]}], "]"}]}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", "\[IndentingNewLine]", "\t", 
     RowBox[{"Label", "[", "\"\<ToNewData\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"newdata", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"prefix", "<>", "#1", "<>", "\"\<.img=\>\"", "<>", "#2"}], 
         "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"seq", ",", "newvalues"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"PrependTo", "[", 
      RowBox[{"newdata", ",", "\"\<[Monitor]\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Writing", " ", "new", " ", "file"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"filename", "=", 
      RowBox[{"StringDrop", "[", 
       RowBox[{"file", ",", 
        RowBox[{"-", "4"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"filename", "<>", "\"\<_new\>\"", "<>", "\"\<.ini\>\""}], ",", 
       "newdata", ",", "\"\<Table\>\""}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[2]:=",
 CellID->1224290824]
}, Closed]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData["Stian's Mathematica package"]], 
   "paclet:Stians/guide/StiansOverview"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->2061662085]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"MonitorIni",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:Stians/guide/Stians", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2021, 4, 28, 13, 39, 41.719904}", 
    "history" -> {"0.0", "", "", ""}, "context" -> "Stians`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Stians Symbol", "language" -> "en", "paclet" -> "Stians", "status" -> 
    "None", "summary" -> 
    "MonitorIni[file, input] substitutes the monitor values in the .ini file \
with the values of input. MonitorIni[file, flux] substitutes the monitor \
values in the .ini file with normalised values from the flux file. \
MonitorIni[file, {start, stop}] substitutes the monitor values in the .ini \
file with automatically generated values going linearly from start to stop.", 
    "synonyms" -> {}, "tabletags" -> {}, "title" -> "MonitorIni", 
    "titlemodifier" -> "", "windowtitle" -> "MonitorIni", "type" -> "Symbol", 
    "uri" -> "Stians/ref/MonitorIni", "WorkflowDockedCell" -> ""}, 
  "SearchTextTranslated" -> "", "NewStyles" -> False},
CellContext->"Global`",
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "12.1 for Mac OS X x86 (64-bit) (June 19, 2020)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[7457, 235, 268, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"673f2e6b-d52e-4bac-bd77-9426bb25247e",
   CellTags->"PrimaryExamplesSection",
   CellID->1293880499]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 24301, 710}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[582, 21, 3037, 74, 70, "AnchorBarGrid",ExpressionUUID->"60aa2a98-40cb-4f63-b64f-6280c8732ad6",
 CellID->1],
Cell[CellGroupData[{
Cell[3644, 99, 167, 6, 70, "ObjectNameGrid",ExpressionUUID->"5b7e3674-80f3-4863-a376-15cf7bee8086"],
Cell[3814, 107, 2279, 73, 70, "Usage",ExpressionUUID->"04d2ac2e-be85-4e8f-aeff-808f345570a8",
 CellID->982511436]
}, Open  ]],
Cell[CellGroupData[{
Cell[6130, 185, 629, 19, 70, "NotesSection",ExpressionUUID->"c4d7d839-ac24-4e45-8eac-3955da46efb5",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->896916856],
Cell[6762, 206, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"fa7f8a52-5c9b-49a8-b575-cb1fe1df7a9d"],
Cell[6796, 208, 362, 10, 70, "Notes",ExpressionUUID->"f688e4a5-78f9-4427-94ce-82346c04fe88",
 CellID->1067943069],
Cell[7161, 220, 225, 8, 70, "Notes",ExpressionUUID->"3c26f510-d0dd-45d8-b4df-dfc7dc02b983",
 CellID->1281169926],
Cell[7389, 230, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"41853c53-b1a0-47a5-a2fb-597428dbf7b2"]
}, Closed]],
Cell[CellGroupData[{
Cell[7457, 235, 268, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"673f2e6b-d52e-4bac-bd77-9426bb25247e",
 CellTags->"PrimaryExamplesSection",
 CellID->1293880499],
Cell[CellGroupData[{
Cell[7750, 249, 195, 6, 70, "ExampleSection",ExpressionUUID->"6559aef0-12c9-40d6-b4f7-13667c3581b3",
 CellID->830137171],
Cell[7948, 257, 459, 14, 70, "Input",ExpressionUUID->"d9b46af5-1e5f-46ca-b1c1-a7f753f600f2",
 CellID->1094871088],
Cell[8410, 273, 401, 10, 70, "ExampleText",ExpressionUUID->"1cf14277-c2d0-466e-afdc-333ded05c660",
 CellID->2123744621],
Cell[CellGroupData[{
Cell[8836, 287, 274, 8, 70, "Input",ExpressionUUID->"8abd9ae0-3a59-424d-adaf-7c18e548b86a",
 CellID->1027648522],
Cell[9113, 297, 825, 16, 70, "Output",ExpressionUUID->"39101ffa-4c39-42c7-86e1-aef5abacfcae",
 CellID->644856443]
}, Open  ]],
Cell[9953, 316, 248, 8, 70, "ExampleText",ExpressionUUID->"3a8f294a-901a-4dc5-95a4-73e02ee76008",
 CellID->537111355],
Cell[CellGroupData[{
Cell[10226, 328, 303, 10, 70, "Input",ExpressionUUID->"f213d5a9-a665-44be-8db0-1fefd4392a92",
 CellID->1688044346],
Cell[10532, 340, 883, 16, 70, "Output",ExpressionUUID->"067246c0-480b-4fbf-acec-32be7dbaa35c",
 CellID->1899754739]
}, Open  ]],
Cell[11430, 359, 296, 12, 70, "ExampleText",ExpressionUUID->"e9b716b5-ced5-444c-8432-1020f3518fae",
 CellID->1066585501],
Cell[CellGroupData[{
Cell[11751, 375, 439, 13, 70, "Input",ExpressionUUID->"2ab9ee79-3ead-4e8a-b3ab-2be938553363",
 CellID->170422683],
Cell[12193, 390, 887, 16, 70, "Output",ExpressionUUID->"ed514615-6858-4ec4-87d6-7063aaba0bca",
 CellID->391034777]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13129, 412, 235, 8, 70, "ExampleSection",ExpressionUUID->"d14b0b92-d92c-4124-88d8-a08d26cb04a2",
 CellID->887364112],
Cell[13367, 422, 498, 13, 70, "Input",ExpressionUUID->"38e999f5-bd02-4961-aaad-9dfa3da12926",
 CellID->1802185616],
Cell[13868, 437, 7771, 194, 70, "Input",ExpressionUUID->"d4134f73-683d-41b6-80a2-3df21d89944a",
 CellID->1224290824]
}, Closed]],
Cell[21654, 634, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"b0cd0a77-2121-4695-b29d-1d295e910f22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21722, 639, 156, 7, 70, "MoreAboutSection",ExpressionUUID->"ebf175d8-dde5-412d-82a3-77bf81b53e35",
 CellID->38303248],
Cell[21881, 648, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"2b979102-2530-451a-b0d6-53413cf16b73"],
Cell[21915, 650, 201, 7, 70, "MoreAbout",ExpressionUUID->"133f6fa2-3be8-4db7-8ea4-91e0da252c39",
 CellID->2061662085]
}, Open  ]],
Cell[22131, 660, 23, 0, 70, "FooterCell",ExpressionUUID->"e191fc36-1bef-40a6-8470-aa97288dc4e8"]
}
]
*)

(* End of internal cache information *)
