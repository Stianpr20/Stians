(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     32358,        910]
NotebookOptionsPosition[     25368,        759]
NotebookOutlinePosition[     27402,        814]
CellTagsIndexPosition[     27317,        809]
WindowTitle->GifGenerator
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["STIANS SYMBOL", "PacletNameCell"], Cell[TextData[Cell[BoxData[
     ActionMenuBox[
      FrameBox[
       InterpretationBox[Cell[TextData[{
         "URL",
         StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
          StripOnInput->False]
        }]],
        TextCell[
         Row[{"URL", 
           Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
       StripOnInput->False], {"\<\"Stians/ref/GifGenerator\"\>":>
      None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
      Module[{DocumentationSearch`Private`nb$}, 
       DocumentationSearch`Private`nb$ = NotebookPut[
          Notebook[{
            Cell["Stians/ref/GifGenerator"]}, Visible -> False]]; 
       SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
       FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
       NotebookClose[DocumentationSearch`Private`nb$]; Null], 
      Delimiter, "\<\"Copy web URL\"\>":>
      Module[{DocumentationSearch`Private`nb$}, 
       DocumentationSearch`Private`nb$ = NotebookPut[
          Notebook[{
            Cell[
             BoxData[
              MakeBoxes[
               Hyperlink[
               "http://reference.wolfram.com/language/Stians/ref/GifGenerator.\
html"], StandardForm]], "Input", TextClipboardType -> "PlainText"]}, Visible -> 
           False]]; SelectionMove[
        DocumentationSearch`Private`nb$, All, Notebook]; 
       FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
       NotebookClose[DocumentationSearch`Private`nb$]; 
       Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
        NotebookLocate[{
          URL[
           StringJoin[
            If[
             TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$16042], 
             "http://reference.wolfram.com/system-modeler/", 
             "http://reference.wolfram.com/language/"], 
            "Stians/ref/GifGenerator", ".html"]], None}]}]},
      Appearance->None,
      MenuAppearance->Automatic,
      MenuStyle->"URLMenu"]],
     LineSpacing->{1.4, 0}]], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[TextData[{
 Cell["GifGenerator", "ObjectName"],
 Cell[BoxData[
  TemplateBox[{8},
   "Spacer1"]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["GifGenerator"]], "paclet:Stians/ref/GifGenerator"},
        "RefLink",
        BaseStyle->{"InlineFormula"}], "[", 
       StyleBox["input", "TI"], "]"}]], "InlineFormula"],
     " \[LineSeparator]produces an animation file based on ",
     Cell[BoxData[
      StyleBox["input", "TI"]], "InlineFormula"],
     "."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{None}}}},
 CellID->982511436],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    TemplateBox[{6},
     "Spacer1"]]],
   "Details and Options"
  }], "NotesFrameText"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  StyleBox["input", "TI"]], "InlineFormula"],
 " may be images or file paths to images, but it has to be a list. If it is a \
list of file paths, the images will be imported automatically."
}], "Notes",
 CellID->1067943069],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], "\"\<BackwardsLoop\>\"", Cell[
    "appends a duplicate of input in reversed order", "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<Format\>\"", Cell[
    "produce MPEG-4 video instead", "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<GifName\>\"", Cell[TextData[{
     "the file name of the ",
     StyleBox["gif", "InlineCode"]
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<OutputDirectory\>\"", Cell[
    "where the produced file is placed", "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<Time\>\"", Cell[
    "how many seconds each frame is visible", "TableText"]}
  }]], "2ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "Rows" -> {None, None, None, None, {None}}},
 GridBoxDividers->{"Rows" -> {{True, True, True, True, True, True}}}},
 CellID->1115609353],

Cell[TextData[{
 "The only supported settings for ",
 Cell[BoxData["\"\<Format\>\""], "InlineFormula"],
 " are ",
 Cell[BoxData["\"\<gif\>\""], "InlineFormula"],
 " and ",
 Cell[BoxData["\"\<mp4\>\""], "InlineFormula"],
 ". The defulat setting for ",
 Cell[BoxData["\"\<Time\>\""], "InlineFormula"],
 " is ",
 Cell[BoxData["0.1"], "InlineFormula"],
 "."
}], "Notes",
 CellID->1150039653],

Cell[TextData[{
 "If the ",
 Cell[BoxData[
  StyleBox["input", "TI"]], "InlineFormula"],
 " is a list of images, and no name for the ",
 StyleBox["gif", "InlineCode"],
 " is specified, it wil be called ",
 StyleBox["output.gif", "InlineCode"],
 "."
}], "Notes",
 CellID->171948806]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(7)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->1],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1],

Cell["\<\
Gather all the image files from a project and store them in a symbol.\
\>", "ExampleText",
 CellID->709791874],

Cell[BoxData[
 RowBox[{
  RowBox[{"files", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
      "$StiansExamples", ",", "\"\<Unwarps\>\"", ",", 
       "\"\<Crystal_1*.bmp\>\""}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->65826069],

Cell["Now input this list to the function:", "ExampleText",
 CellID->1868727872],

Cell[BoxData[
 RowBox[{
  RowBox[{"GifGenerator", "[", "files", "]"}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->869774346],

Cell[TextData[{
 "You may also import the images first, and use a list of these as input. \
This method may be preferable if you want to try different settings for the \
",
 StyleBox["\"DisplayDurations\"", "InlineCode"],
 " option."
}], "ExampleText",
 CellID->645910824],

Cell[BoxData[
 RowBox[{
  RowBox[{"images", "=", 
   RowBox[{"Import", "/@", "files"}]}], ";"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1975675792],

Cell[BoxData[
 RowBox[{
  RowBox[{"GifGenerator", "[", 
   RowBox[{"images", ",", 
    RowBox[{"\"\<GifName\>\"", "\[Rule]", "\"\<test2\>\""}]}], "]"}], 
  ";"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->1856339563],

Cell[TextData[{
 "The second ",
 StyleBox["gif", "InlineCode"],
 " will be placed on the desktop, since it has no source directory."
}], "ExampleText",
 CellID->423447444]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Options",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(5)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->2061341341],

Cell[CellGroupData[{

Cell[TextData[{
 "\"BackwardsLoop\"",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->1280469678],

Cell[TextData[{
 "Setting this to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["True"]], "paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " will loop the gif backwards."
}], "ExampleText",
 CellID->920251559],

Cell[BoxData[
 RowBox[{
  RowBox[{"GifGenerator", "[", 
   RowBox[{"images", ",", 
    RowBox[{"\"\<BackwardsLoop\>\"", "\[Rule]", "True"}]}], "]"}], 
  ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->490726419]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\"Format\"",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->1513056849],

Cell[TextData[{
 "MPEG-4 video takes considerably less space than a ",
 StyleBox["gif", "InlineCode"],
 "."
}], "ExampleText",
 CellID->1851027952],

Cell[BoxData[
 RowBox[{
  RowBox[{"GifGenerator", "[", 
   RowBox[{"images", ",", 
    RowBox[{"\"\<Format\>\"", "\[Rule]", "\"\<mp4\>\""}]}], "]"}], 
  ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->601174653]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\"GifName\"",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->1059096415],

Cell[TextData[{
 "This option lets the user specify the name of the ",
 StyleBox["gif", "InlineCode"],
 "."
}], "ExampleText",
 CellID->890265875],

Cell[BoxData[
 RowBox[{
  RowBox[{"GifGenerator", "[", 
   RowBox[{"images", ",", 
    RowBox[{"\"\<GifName\>\"", "\[Rule]", "\"\<abc\>\""}]}], "]"}], 
  ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1849079739]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\"OutputDirectory\"",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->1295379749],

Cell[TextData[{
 "This option lets the user specify where the produced ",
 StyleBox["gif", "InlineCode"],
 " will be placed."
}], "ExampleText",
 CellID->153372639],

Cell[BoxData[
 RowBox[{
  RowBox[{"GifGenerator", "[", 
   RowBox[{"images", ",", 
    RowBox[{"\"\<OutputDirectory\>\"", "\[Rule]", "$StiansExamples"}]}], 
   "]"}], ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1958393268]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\"Time\"",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->1757724783],

Cell[TextData[{
 "This option governs the \
\[OpenCurlyDoubleQuote]speed\[CloseCurlyDoubleQuote] of the ",
 StyleBox["gif", "InlineCode"],
 "."
}], "ExampleText",
 CellID->1223426193],

Cell[TextData[{
 "For instace, we can have the ",
 StyleBox[".gif", "InlineCode"],
 " stay 0.25 second on each frame:"
}], "ExampleText",
 CellID->362310981],

Cell[BoxData[
 RowBox[{
  RowBox[{"GifGenerator", "[", 
   RowBox[{"images", ",", 
    RowBox[{"\"\<Time\>\"", "\[Rule]", "0.25"}]}], "]"}], ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1394380883]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " code",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1144320007],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GifGenerator", "::", "names"}], "=", 
   "\"\<Invalid dimensions of custom name list.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GifGenerator", "::", "namestring"}], "=", 
   "\"\<Some of the names are not strings.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GifGenerator", "::", "invalid"}], "=", 
   "\"\<Invalid \[LeftGuillemet]Names\[RightGuillemet] option.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GifGenerator", "::", "format"}], "=", 
    "\"\<\[LeftGuillemet]`1`\[RightGuillemet] is not a valid output format.\>\
\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "GifGenerator", "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Time\>\"", "\[Rule]", "0.1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<GifName\>\"", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<OutputDirectory\>\"", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Format\>\"", "\[Rule]", "\"\<gif\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<BackwardsLoop\>\"", "\[Rule]", "False"}]}], "}"}]}], 
  ";"}]}], "Input",
 Background->GrayLevel[0.85],
 CellLabel->"In[1]:=",
 CellID->1242971199],

Cell[BoxData[
 RowBox[{
  RowBox[{"GifGenerator", "[", 
   RowBox[{"input_List", ",", 
    RowBox[{"OptionsPattern", "@", "GifGenerator"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "L", ",", "autoimport", ",", "format", ",", "\[IndentingNewLine]", 
      "data", ",", "progress", ",", "image", ",", "\[IndentingNewLine]", 
      "data1", ",", "data2", ",", "\[IndentingNewLine]", "gifname", ",", 
      "dir", ",", "random", ",", "temp"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Checking", " ", "input", " ", "form"}], " ", "*)"}], 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"L", "=", 
      RowBox[{"Length", "@", "input"}]}], ";", "\[IndentingNewLine]", "\t\t", 
     
     RowBox[{"Off", "[", 
      StyleBox[
       RowBox[{"FileExistsQ", "::", "fstr"}], "MessageName"], 
      StyleBox["]", "MessageName"]}], 
     StyleBox[";", "MessageName"], "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Check", "[", 
        RowBox[{
         RowBox[{"FileExistsQ", "@", 
          RowBox[{"First", "@", "input"}]}], ",", 
         RowBox[{"Abort", "[", "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
       "\t", 
       RowBox[{"autoimport", "=", "True"}], ",", "\[IndentingNewLine]", "\t", 
       
       RowBox[{"autoimport", "=", "False"}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"autoimport", "=", "False"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"On", "[", 
      RowBox[{"FileExistsQ", "::", "fstr"}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"format", "=", 
      RowBox[{"OptionValue", "[", "\"\<Format\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<gif\>\"", ",", "\"\<mp4\>\""}], "}"}], ",", 
          "format"}], "]"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"GifGenerator", "::", "format"}], ",", "format"}], "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Importing", " ", "data", " ", "if", " ", "necessary"}], " ", 
      "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{"autoimport", ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{"Dynamic", " ", "status"}], " ", "*)"}], 
       "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t", 
        RowBox[{"progress", "=", "0"}], ";", "\[IndentingNewLine]", "\t", 
        RowBox[{"PrintTemporary", "[", "\[IndentingNewLine]", "\t", 
         RowBox[{"Row", "[", "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Text", "[", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Image import progress:\>\"", ",", 
                RowBox[{"FontFamily", "\[Rule]", "\"\<Avenir Next\>\""}], ",",
                 "16"}], "]"}], "]"}], ",", "\[IndentingNewLine]", "\t", 
             RowBox[{"Spacer", "[", "20", "]"}], ",", "\[IndentingNewLine]", 
             "\t", 
             RowBox[{"Dynamic", "@", 
              RowBox[{"ProgressIndicator", "[", 
               RowBox[{"progress", "/", "L"}], "]"}]}], ",", 
             "\[IndentingNewLine]", "\t", 
             RowBox[{"Spacer", "[", "20", "]"}], ",", "\[IndentingNewLine]", 
             "\t", 
             RowBox[{"Dynamic", "[", 
              RowBox[{"Text", "[", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"\"\<Imported: \>\"", "<>", 
                  RowBox[{"ToString", "[", "progress", "]"}], "<>", 
                  "\"\< of \>\"", "<>", 
                  RowBox[{"ToString", "@", "L"}]}], ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Avenir Next\>\""}], 
                 ",", "12"}], "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
            "\t", "}"}], ",", "\[IndentingNewLine]", "\t", 
           RowBox[{"Alignment", "\[Rule]", "Center"}]}], 
          "\[IndentingNewLine]", "\t", "]"}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"image", "=", 
            RowBox[{"Import", "@", 
             RowBox[{"input", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
           "\t", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"data", ",", "image"}], "]"}], ";", "\[IndentingNewLine]",
            "\t", 
           RowBox[{"progress", "++"}]}], ",", "\[IndentingNewLine]", "\t", 
          RowBox[{"{", 
           RowBox[{"i", ",", "L"}], "}"}]}], "]"}]}], ",", "\t", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{"No", " ", "import"}], " ", "*)"}], "\[IndentingNewLine]", 
       "\t", 
       RowBox[{"data", "=", "input"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Optional", ":", " ", 
       RowBox[{"Backwards", " ", "loop"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "\"\<BackwardsLoop\>\"", "]"}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"data1", "=", "data"}], ";", "\[IndentingNewLine]", "\t", 
        RowBox[{"data2", "=", 
         RowBox[{"Rest", "@", 
          RowBox[{"Reverse", "@", "data"}]}]}], ";", "\[IndentingNewLine]", 
        "\t", 
        RowBox[{"data", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"data1", ",", "data2"}], "]"}]}]}]}], "\[IndentingNewLine]",
       "\t", "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Making", " ", "the", " ", "name", " ", "of", " ", "the", " ", "gif"}], 
      " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ImageQ", "[", 
        RowBox[{"First", "@", "input"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t", 
       RowBox[{"gifname", "=", "\"\<output\>\""}], ",", "\[IndentingNewLine]",
        "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"StringContainsQ", "[", 
          RowBox[{
           RowBox[{"FileNameTake", "@", 
            RowBox[{"First", "@", "input"}]}], ",", "\"\<_\>\""}], "]"}], ",",
          "\[IndentingNewLine]", "\t", 
         RowBox[{"gifname", "=", 
          RowBox[{"StringDrop", "[", 
           RowBox[{
            RowBox[{"First", "@", 
             RowBox[{"StringCases", "[", 
              RowBox[{
               RowBox[{"FileNameTake", "@", 
                RowBox[{"First", "@", "input"}]}], ",", 
               RowBox[{"__", "~~", "\"\<_\>\""}]}], "]"}]}], ",", 
            RowBox[{"-", "1"}]}], "]"}]}], ",", "\[IndentingNewLine]", "\t", 
         RowBox[{"gifname", "=", "\"\<output\>\""}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringQ", "@", 
        RowBox[{"OptionValue", "[", "\"\<GifName\>\"", "]"}]}], ",", 
       RowBox[{"gifname", "=", 
        RowBox[{"OptionValue", "[", "\"\<GifName\>\"", "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Checking", " ", "output", " ", "directory"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{"autoimport", ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{"Use", " ", "source", " ", "directory"}], " ", "*)"}], 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dir", "=", 
        RowBox[{"FileNameTake", "[", 
         RowBox[{
          RowBox[{"First", "@", "input"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{"Use", " ", "desktop"}], " ", "*)"}], "\[IndentingNewLine]", 
       "\t\t", 
       RowBox[{"dir", "=", 
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"{", 
          RowBox[{"$HomeDirectory", ",", "\"\<Desktop\>\""}], "}"}], 
         "]"}]}]}], "\[IndentingNewLine]", "\t", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "\"\<OutputDirectory\>\"", "]"}], ",", 
       "Null", ",", "Null", ",", 
       RowBox[{"dir", "=", 
        RowBox[{"OptionValue", "[", "\"\<OutputDirectory\>\"", "]"}]}]}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Optional", ":", " ", 
       RowBox[{"Exporting", " ", "to", " ", 
        RowBox[{"a", " ", ".", "mp4"}], " ", "video"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"format", "===", "\"\<mp4\>\""}], ",", "\[IndentingNewLine]", 
       "\t", 
       RowBox[{
        RowBox[{"random", "=", 
         RowBox[{"ToString", "@", 
          RowBox[{"RandomInteger", "[", 
           RowBox[{"10", "^", "10"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        "\t", 
        RowBox[{"temp", "=", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{"dir", ",", 
            RowBox[{
            "\"\<tempname\>\"", "<>", "random", "<>", "\"\<.mov\>\""}]}], 
           "}"}], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
        RowBox[{"Export", "[", "\[IndentingNewLine]", "\t", 
         RowBox[{
         "temp", ",", "\[IndentingNewLine]", "\t", "data", ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{
          "\"\<VideoEncoding\>\"", "\[Rule]", "\"\<MPEG-4 Video\>\""}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"\"\<FrameRate\>\"", "\[Rule]", 
           RowBox[{"1", "/", 
            RowBox[{"OptionValue", "[", "\"\<Time\>\"", "]"}]}]}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\t", "\[IndentingNewLine]", "\t", 
        RowBox[{"Return", "@", 
         RowBox[{"RenameFile", "[", "\[IndentingNewLine]", "\t", 
          RowBox[{"temp", ",", "\[IndentingNewLine]", "\t", 
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"{", 
             RowBox[{"dir", ",", 
              RowBox[{"gifname", "<>", "\"\<.mp4\>\""}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"OverwriteTarget", "\[Rule]", "True"}]}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "\t", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Exporting", " ", "gif"}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"format", "===", "\"\<gif\>\""}], ",", "\[IndentingNewLine]", 
       "\t", 
       RowBox[{"Return", "@", 
        RowBox[{"Export", "[", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", 
            RowBox[{"dir", ",", 
             RowBox[{"gifname", "<>", "\"\<.gif\>\""}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", "\t", "data", ",", "\[IndentingNewLine]", 
          "\t", 
          RowBox[{"\"\<DisplayDurations\>\"", "\[Rule]", 
           RowBox[{"OptionValue", "[", "\"\<Time\>\"", "]"}]}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "\t", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[2]:=",
 CellID->2043507224]
}, Closed]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"GifGenerator",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:Stians/guide/Stians", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> True, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2021, 4, 28, 13, 39, 31.194024}", 
    "history" -> {"0.0", "", "", ""}, "context" -> "Stians`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Stians Symbol", "language" -> "en", "paclet" -> "Stians", "status" -> 
    "None", "summary" -> 
    "GifGenerator[input] produces an animation file based on input.", 
    "synonyms" -> {}, "tabletags" -> {}, "title" -> "GifGenerator", 
    "titlemodifier" -> "", "windowtitle" -> "GifGenerator", "type" -> 
    "Symbol", "uri" -> "Stians/ref/GifGenerator"}},
CellContext->"Global`",
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "12.1 for Mac OS X x86 (64-bit) (June 19, 2020)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[6188, 188, 259, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"4bbcbf7c-b728-4029-a861-3b6bb6a02edf",
   CellTags->"PrimaryExamplesSection",
   CellID->1]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 27127, 802}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[584, 21, 2277, 53, 70, "AnchorBarGrid",ExpressionUUID->"b40e286d-e225-4720-ba26-1ee450f5ed81",
 CellID->1],
Cell[2864, 76, 169, 6, 70, "ObjectNameGrid",ExpressionUUID->"15b51ffc-1939-465c-a090-26511faeb8b6"],
Cell[3036, 84, 580, 18, 70, "Usage",ExpressionUUID->"ec9ba6e3-339d-49a7-8696-c6b3355038b9",
 CellID->982511436],
Cell[CellGroupData[{
Cell[3641, 106, 633, 19, 70, "NotesSection",ExpressionUUID->"53ffaa61-cfb5-42e2-8246-0dd2acf39016",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1],
Cell[4277, 127, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"0d30e24b-8863-4a87-a2ed-e39a9879a941"],
Cell[4311, 129, 263, 7, 70, "Notes",ExpressionUUID->"9c84bd8b-87f1-42bb-b913-8e4428066251",
 CellID->1067943069],
Cell[4577, 138, 900, 18, 70, "2ColumnTableMod",ExpressionUUID->"12ffe996-ed81-4431-b034-c28081a892f6",
 CellID->1115609353],
Cell[5480, 158, 387, 13, 70, "Notes",ExpressionUUID->"9cc4588f-5db3-4525-a957-e82a90f0c623",
 CellID->1150039653],
Cell[5870, 173, 281, 10, 70, "Notes",ExpressionUUID->"caf6f973-e902-4cc2-b784-01aa81fbbdb4",
 CellID->171948806]
}, Closed]],
Cell[CellGroupData[{
Cell[6188, 188, 259, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"4bbcbf7c-b728-4029-a861-3b6bb6a02edf",
 CellTags->"PrimaryExamplesSection",
 CellID->1],
Cell[CellGroupData[{
Cell[6472, 202, 187, 6, 70, "ExampleSection",ExpressionUUID->"aefcca93-6e79-4289-8f8b-4886e32df1b6",
 CellID->1],
Cell[6662, 210, 120, 3, 70, "ExampleText",ExpressionUUID->"a7107072-145f-4f82-9eea-c3b41f946e21",
 CellID->709791874],
Cell[6785, 215, 318, 10, 70, "Input",ExpressionUUID->"9ded6b33-1959-4541-81f4-6268d294857c",
 CellID->65826069],
Cell[7106, 227, 80, 1, 70, "ExampleText",ExpressionUUID->"0140523a-9b8a-4ed6-8379-ed1158e208fb",
 CellID->1868727872],
Cell[7189, 230, 130, 4, 70, "Input",ExpressionUUID->"eed9b01a-79c4-4f83-b3e5-0eca1812b3c4",
 CellID->869774346],
Cell[7322, 236, 272, 7, 70, "ExampleText",ExpressionUUID->"fa6796fb-3633-41de-b725-67715541abab",
 CellID->645910824],
Cell[7597, 245, 150, 5, 70, "Input",ExpressionUUID->"7682d1f7-e1b6-4e44-98d1-e317efeed360",
 CellID->1975675792],
Cell[7750, 252, 216, 7, 70, "Input",ExpressionUUID->"b8ffd345-89f9-49d4-a343-c017e9921c71",
 CellID->1856339563],
Cell[7969, 261, 171, 5, 70, "ExampleText",ExpressionUUID->"125ea3e5-47aa-4aee-b36c-4c6b17f88b3c",
 CellID->423447444]
}, Open  ]],
Cell[CellGroupData[{
Cell[8177, 271, 189, 6, 70, "ExampleSection",ExpressionUUID->"e6f2980b-ce17-4668-b248-070a02a072f2",
 CellID->2061341341],
Cell[CellGroupData[{
Cell[8391, 281, 205, 6, 70, "ExampleSubsection",ExpressionUUID->"967391e9-dbcc-40da-966d-592a1c99ef35",
 CellID->1280469678],
Cell[8599, 289, 260, 10, 70, "ExampleText",ExpressionUUID->"45dcba04-acc7-4a2a-b081-1e2dd9e62773",
 CellID->920251559],
Cell[8862, 301, 212, 7, 70, "Input",ExpressionUUID->"bd9a120e-2afd-49c8-a111-000a71d944f8",
 CellID->490726419]
}, Closed]],
Cell[CellGroupData[{
Cell[9111, 313, 198, 6, 70, "ExampleSubsection",ExpressionUUID->"18207a83-99b1-4d9a-91da-cb3e6c7a0ca7",
 CellID->1513056849],
Cell[9312, 321, 147, 5, 70, "ExampleText",ExpressionUUID->"9930188e-65e1-4ae1-b877-c0c3502e9c44",
 CellID->1851027952],
Cell[9462, 328, 212, 7, 70, "Input",ExpressionUUID->"1012f484-a940-4900-a2dc-d0bf8976fb24",
 CellID->601174653]
}, Closed]],
Cell[CellGroupData[{
Cell[9711, 340, 199, 6, 70, "ExampleSubsection",ExpressionUUID->"dcd9558b-1d98-4e53-a0f6-87807280fdd7",
 CellID->1059096415],
Cell[9913, 348, 146, 5, 70, "ExampleText",ExpressionUUID->"6eb20895-54bb-4628-a22c-b26f5a60a661",
 CellID->890265875],
Cell[10062, 355, 214, 7, 70, "Input",ExpressionUUID->"9ebf1925-9290-45c8-8204-f874a2ea0f43",
 CellID->1849079739]
}, Closed]],
Cell[CellGroupData[{
Cell[10313, 367, 207, 6, 70, "ExampleSubsection",ExpressionUUID->"55d536da-84db-498a-bdd9-c1dfbf5c2ed6",
 CellID->1295379749],
Cell[10523, 375, 164, 5, 70, "ExampleText",ExpressionUUID->"985a6eb8-ee53-4993-8df6-26c8b7a8275f",
 CellID->153372639],
Cell[10690, 382, 227, 7, 70, "Input",ExpressionUUID->"9e2662a7-8b83-470b-b854-0d199a3744be",
 CellID->1958393268]
}, Closed]],
Cell[CellGroupData[{
Cell[10954, 394, 196, 6, 70, "ExampleSubsection",ExpressionUUID->"2a3816c6-b68f-426c-8d8b-69ed40a66556",
 CellID->1757724783],
Cell[11153, 402, 183, 6, 70, "ExampleText",ExpressionUUID->"a6a747f2-0995-4247-967d-6b8b28012bfb",
 CellID->1223426193],
Cell[11339, 410, 157, 5, 70, "ExampleText",ExpressionUUID->"04a13246-9455-4105-8787-1b46bc989377",
 CellID->362310981],
Cell[11499, 417, 201, 6, 70, "Input",ExpressionUUID->"c23eb41a-739d-4c8e-b265-ff0d55ff0b02",
 CellID->1394380883]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[11749, 429, 236, 8, 70, "ExampleSection",ExpressionUUID->"546686dd-64f4-4326-847b-ce244e0c6798",
 CellID->1144320007],
Cell[11988, 439, 1395, 38, 70, "Input",ExpressionUUID->"32792f1f-c1c6-4d10-8510-831bdab0aefb",
 CellID->1242971199],
Cell[13386, 479, 11928, 274, 70, "Input",ExpressionUUID->"b9d59b83-39c0-44fc-90dd-e26655bbcd19",
 CellID->2043507224]
}, Closed]]
}, Open  ]],
Cell[25341, 757, 23, 0, 70, "FooterCell",ExpressionUUID->"2e9749c8-68b4-4946-9b6d-14a87e4f165a"]
}
]
*)

(* End of internal cache information *)
