SyncSpellings::usage="\!\(\*RowBox[{\"SyncSpellings\", \"[\", SubscriptBox[StyleBox[\"path\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"path\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \"]\"}]\)\!\(\*RowBox[{\" gathers dictionaries from \", Cell[BoxData[SubscriptBox[StyleBox[\"path\", \"TI\"], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \" and synchronises them.\"}]\)\n\!\(\*RowBox[{\"SyncSpellings\", \"[\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"path\", \"TI\"], StyleBox[\"x1\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"path\", \"TI\"], StyleBox[\"x2\", \"TI\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"path\", \"TI\"], StyleBox[\"y1\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"path\", \"TI\"], StyleBox[\"y2\", \"TI\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \"]\"}]\) \!\(\*RowBox[{\"gathers dictionaries from \", Cell[BoxData[SubscriptBox[StyleBox[\"path\", \"TI\"], StyleBox[\"\[Alpha]i\", \"TI\"]]], \"InlineFormula\"], \", belonging to language \", Cell[BoxData[StyleBox[\"\[Alpha]\", \"TR\"]], \"InlineFormula\"], \".\"}]\)";


GifGenerator::usage="\!\(\*RowBox[{\"GifGenerator\", \"[\", StyleBox[\"input\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" produces a \", StyleBox[\"gif\", \"InlineCode\"], \" file based on \", Cell[BoxData[StyleBox[\"input\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


TagImages::usage="\!\(\*RowBox[{\"TagImages\", \"[\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"image\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"image\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", SubscriptBox[StyleBox[\"image\", \"TI\"], StyleBox[\"i\", \"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"ltag\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"rtag\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"ltag\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"rtag\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \"}\"}], \",\", RowBox[{StyleBox[\"\[Ellipsis]\", \"TR\"], RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"ltag\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"rtag\", \"TI\"], StyleBox[\"i\", \"TI\"]]}], \"}\"}]}]}], \"}\"}], \"]\"}]\)\!\(\*RowBox[{\" marks the lower left and right corners of \", Cell[BoxData[SubscriptBox[StyleBox[\"image\", \"TI\"], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \" with the tags \", Cell[BoxData[SubscriptBox[StyleBox[\"ltag\", \"TI\"], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \" and \", Cell[BoxData[SubscriptBox[StyleBox[\"rtag\", \"TI\"], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \".\"}]\)";


ExtractUsage::usage="\!\(\*RowBox[{\"ExtractUsage\", \"[\", StyleBox[\"notebook\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" extracts usage messages found in \", Cell[BoxData[StyleBox[\"notebook\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


NeatUsage::usage="\!\(\*RowBox[{\"NeatUsage\", \"[\", RowBox[{\"{\", RowBox[{StyleBox[\"app\", \"TI\"], \",\", StyleBox[\"symbol\", \"TI\"]}], \"}\"}], \",\", StyleBox[\"string\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" sets \", Cell[BoxData[StyleBox[\"string\", \"TI\"]], \"InlineFormula\"], \" to be a formatted usage message for the \", Cell[BoxData[StyleBox[\"symbol\", \"TI\"]], \"InlineFormula\"], \" in the application \", Cell[BoxData[StyleBox[\"app\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"NeatUsage\", \"[\", RowBox[{\"{\", RowBox[{StyleBox[\"app\", \"TI\"], \",\", StyleBox[\"symbol\", \"TI\"]}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"string\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"string\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", SubscriptBox[StyleBox[\"string\", \"TI\"], StyleBox[\"i\", \"TI\"]]}], \"}\"}], \"]\"}]\) \!\(\*RowBox[{\"sets a formatted usage message for \", Cell[BoxData[StyleBox[\"symbol\", \"TI\"]], \"InlineFormula\"], \" in the application \", Cell[BoxData[StyleBox[\"app\", \"TI\"]], \"InlineFormula\"], \" with \", Cell[BoxData[SubscriptBox[StyleBox[\"string\", \"TI\"], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \" on line \", StyleBox[\"i\", \"TI\"], \".\"}]\)\n\!\(\*RowBox[{\"NeatUsage\", \"[\", StyleBox[\"notebook\", \"TI\"], \",\", StyleBox[\"file\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"extracts formatted usage message from \", Cell[BoxData[StyleBox[\"notebook\", \"TI\"]], \"InlineFormula\"], \" and stores it in \", Cell[BoxData[StyleBox[\"file\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


CopyDefinitionCodeToDocumentation::usage="\!\(\*RowBox[{\"CopyDefinitionCodeToDocumentation\", \"[]\"}]\)\!\(\*RowBox[{\" CopyDefinitionCodeToDocumentation\"}]\)";


RenamePackageFunction::usage="\!\(\*RowBox[{\"RenamePackageFunction\", \"[]\"}]\)\!\(\*RowBox[{\" RenamePackageFunction\"}]\)";


GroupTable::usage="\!\(\*RowBox[{\"GroupTable\", \"[\", StyleBox[\"m\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" returns a group table for multiplication modulo \", Cell[BoxData[StyleBox[\"m\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"GroupTable\", \"[\", StyleBox[\"set\", \"TI\"], \",\", StyleBox[\"m\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"returns a group table for multiplication modulo \", Cell[BoxData[StyleBox[\"m\", \"TI\"]], \"InlineFormula\"], \" applied to a custom \", Cell[BoxData[StyleBox[\"set\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


PolygonArea::usage="\!\(\*RowBox[{\"PolygonArea\", \"[\", \"{\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\", \"]\"}]\)\!\(\*RowBox[{\" gives the area of the polygon with vertices at \", Cell[BoxData[RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"i\", \"TI\"]]}], \"}\"}]], \"InlineFormula\"], \".\"}]\)";


ColourConversion::usage="\!\(\*RowBox[{\"ColourConversion\", \"[\", \"{\", RowBox[\"{\"R\", \",\", \"G\", \",\", \"B\"}\"], \"}\", \"]\"}]\)\!\(\*RowBox[{\" converts from the RGB colour model to HTML.\"}]\)\n\!\(\*RowBox[\"{\"ColourConversion\", \"[\", \"HTML\", \"]\"}\"]\) \!\(\*RowBox[{\"converts from the HTML colour model to RGB.\"}]\)";


GridToLaTeX::usage="\!\(\*RowBox[{\"GridToLaTeX\", \"[\", StyleBox[\"grid\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" converts \", Cell[BoxData[StyleBox[\"grid\", \"TI\"]], \"InlineFormula\"], \" to \", Cell[BoxData[FormBox[StyleBox[RowBox[{\"L\", StyleBox[AdjustmentBox[\"A\", BoxBaselineShift -> -0.4, BoxMargins -> {{-0.5, -0.3}, {0, 0}}], FontSize -> Smaller], \"T\", AdjustmentBox[\"E\", BoxBaselineShift -> 0.5, BoxMargins -> {{-0.3, 0}, {0, 0}}], \"X\"}], SingleLetterItalics -> False], TraditionalForm]]], \" code.\"}]\)";


AlignUB::usage="\!\(\*RowBox[{\"AlignUB\", \"[\", StyleBox[\"string\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" returns the numbers generated by the \", StyleBox[\"ty u\", \"Program\"], \" command in \", StyleBox[\"CrysAlis\", FontSlant -> \"Italic\"], \" as a 3\[Times]3 matrix.\"}]\)\n\!\(\*RowBox[{\"AlignUB\", \"[\", StyleBox[\"class\", \"TI\"], \",\", StyleBox[\"ref\", \"TI\"], \",\", StyleBox[\"input\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"returns the command to be used in \", StyleBox[\"CrysAlis\", FontSlant -> \"Italic\"], \" for transforming the \", Cell[BoxData[FormBox[StyleBox[\"UB\", FontSlant -> \"Italic\"], TraditionalForm]], \"InlineMath\"], \" matrix to that of the \", Cell[BoxData[StyleBox[\"ref\", \"TI\"]], \"InlineFormula\"], \" matrix, given the \", Cell[BoxData[StyleBox[\"input\", \"TI\"]], \"InlineFormula\"], \" matrix and Laue \", Cell[BoxData[StyleBox[\"class\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


ErrorPropagation::usage="\!\(\*RowBox[{\"ErrorPropagation\", \"[\", StyleBox[\"f\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"\[Delta]x\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"n\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"\[Delta]x\", \"TI\"], StyleBox[\"n\", \"TI\"]]}], \"}\"}], \"]\"}]\)\!\(\*RowBox[{\" returns \", Cell[BoxData[RowBox[{StyleBox[\"f\", \"TI\"], \"[\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"n\", \"TI\"]]}], \"]\"}]], \"InlineFormula\"], \" along with the propagated uncertainty.\"}]\)";


ExportReflectionFile::usage="\!\(\*RowBox[{\"ExportReflectionFile\", \"[\", StyleBox[\"file\", \"TI\"], \",\", StyleBox[\"data\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" exports reflection \", Cell[BoxData[StyleBox[\"data\", \"TI\"]], \"InlineFormula\"], \" to an \", StyleBox[\".hkl\", \"InlineCode\"], \" \", Cell[BoxData[StyleBox[\"file\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


FindPixelClusters::usage="\!\(\*RowBox[{\"FindPixelClusters\", \"[\", StyleBox[\"image\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" distinguishes two-dimensional clusters in the \", Cell[BoxData[StyleBox[\"image\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"FindPixelClusters\", \"[\", StyleBox[\"list\", \"TI\"], \",\", StyleBox[\"file\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"stores the pixel data of images in \", Cell[BoxData[StyleBox[\"list\", \"TI\"]], \"InlineFormula\"], \" to an output \", Cell[BoxData[StyleBox[\"file\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


ImgScript::usage="\!\(\*RowBox[{\"ImgScript\", \"[\", StyleBox[\"dir\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"generates a \", StyleBox[\".mac\", \"InlineCode\"], \" script file for converting \", StyleBox[\".img\", \"InlineCode\"], \" files in \", Cell[BoxData[StyleBox[\"dir\", \"TI\"]], \"InlineFormula\"], \" to \", StyleBox[\".bmp\", \"InlineCode\"], \" or \", StyleBox[\".jpg\", \"InlineCode\"], \".\"}]\)\n\!\(\*RowBox[{\"ImgScript\", \"[\", StyleBox[\"dir\", \"TI\"], \",\", StyleBox[\"m\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"generates a \", StyleBox[\".mac\", \"InlineCode\"], \" script file that also adjusts the brightness by a factor \", Cell[BoxData[StyleBox[\"m\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


ImportReflectionFile::usage="\!\(\*RowBox[{\"ImportReflectionFile\", \"[\", StyleBox[\"file\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" imports data in reflection (\", StyleBox[\".hkl\", \"InlineCode\"], \") \", Cell[BoxData[StyleBox[\"file\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


IntensityTable::usage="\!\(\*RowBox[{\"IntensityTable\", \"[\", StyleBox[\"group\", \"TI\"], \",\", StyleBox[\"file\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" generates an overview of the intensity data in a reflection information \", Cell[BoxData[StyleBox[\"file\", \"TI\"]], \"InlineFormula\"], \" (\", StyleBox[\".hkl\", \"InlineCode\"], \") for a given symmetry \", Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


MergeLogs::usage="\!\(\*RowBox[{\"MergeLogs\", \"[\", StyleBox[\"input\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" merges all the log files located in \", Cell[BoxData[StyleBox[\"dir\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"MergeLogs\", \"[\", SubscriptBox[StyleBox[\"dir\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"dir\", \"TI\"], StyleBox[\"2\", \"TR\"]], \"]\"}]\) \!\(\*RowBox[{\"merges all the log files located in \", Cell[BoxData[SubscriptBox[StyleBox[\"dir\", \"TI\"], StyleBox[\"1\", \"TR\"]]], \"InlineFormula\"], \" and exports them to \", Cell[BoxData[SubscriptBox[StyleBox[\"dir\", \"TI\"], StyleBox[\"2\", \"TR\"]]], \"InlineFormula\"], \".\"}]\)";


MonitorIni::usage="\!\(\*RowBox[{\"MonitorIni\", \"[\", StyleBox[\"file\", \"TI\"], \",\", StyleBox[\"input\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" substitutes the monitor values in the \", StyleBox[\".ini\", \"Program\"], \" \", Cell[BoxData[StyleBox[\"file\", \"TI\"]], \"InlineFormula\"], \" with the values of \", Cell[BoxData[StyleBox[\"input\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"MonitorIni\", \"[\", StyleBox[\"file\", \"TI\"], \",\", StyleBox[\"flux\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"substitutes the monitor values in the \", StyleBox[\".ini\", \"Program\"], \" \", Cell[BoxData[StyleBox[\"file\", \"TI\"]], \"InlineFormula\"], \" with normalised values from the \", Cell[BoxData[StyleBox[\"flux\", \"TI\"]], \"InlineFormula\"], \" file.\"}]\)\n\!\(\*RowBox[{\"MonitorIni\", \"[\", StyleBox[\"file\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"start\", \"TI\"], \",\", StyleBox[\"stop\", \"TI\"]}], \"}\"}], \"]\"}]\) \!\(\*RowBox[{\"substitutes the monitor values in the \", StyleBox[\".ini\", \"Program\"], \" \", Cell[BoxData[StyleBox[\"file\", \"TI\"]], \"InlineFormula\"], \" with automatically generated values going linearly from \", Cell[BoxData[StyleBox[\"start\", \"TI\"]], \"InlineFormula\"], \" to \", Cell[BoxData[StyleBox[\"stop\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


NonlinearLeastSquares::usage="\!\(\*RowBox[{\"NonlinearLeastSquares\", \"[\", StyleBox[\"f\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"X\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"X\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", SubscriptBox[StyleBox[\"X\", \"TI\"], StyleBox[\"m\", \"TI\"]]}], \"}\"}], \",\", SubscriptBox[StyleBox[\"\[Beta]\", \"TR\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"\[Beta]\", \"TR\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", SubscriptBox[StyleBox[\"\[Beta]\", \"TR\"], StyleBox[\"n\", \"TI\"]], \"]\"}]\)\!\(\*RowBox[{\" iteratively finds optimal values for the \", Cell[BoxData[StyleBox[\"n\", \"TI\"]], \"InlineFormula\"], \" free parameters of \", Cell[BoxData[StyleBox[\"f\", \"TI\"]], \"InlineFormula\"], \" based on the \", Cell[BoxData[StyleBox[\"m\", \"TI\"]], \"InlineFormula\"], \" data points \", Cell[BoxData[RowBox[{SubscriptBox[StyleBox[\"X\", \"TI\"], StyleBox[\"i\", \"TI\"]], \"=\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"i1\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"i2\", \"TI\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"iv\", \"TI\"]]}], \"}\"}]}]], \"InlineFormula\"], \" of \", Cell[BoxData[StyleBox[\"v\", \"TI\"]], \"InlineFormula\"], \" variables and initial values \", Cell[BoxData[SubscriptBox[StyleBox[\"\[Beta]\", \"TR\"], StyleBox[\"k\", \"TI\"]]], \"InlineFormula\"], \".\"}]\)";


LeastSquaresFit::usage="\!\(\*RowBox[{\"LeastSquaresFit\", \"[\", \"{\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \"}\"}], \",\", RowBox[{StyleBox[\"\[Ellipsis]\", \"TR\"], RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"n\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"n\", \"TI\"]]}], \"}\"}]}]}], \"}\", \"]\"}]\)\!\(\*RowBox[{\" returns the coefficients for the least-squares fit model \", Cell[BoxData[FormBox[RowBox[{\"y\", \"=\", RowBox[{\"a\", \"+\", RowBox[{\"b\", \" \", \"x\"}]}]}], TraditionalForm]], \"InlineMath\"], \" and the correlation coefficient, all with corresponding uncertainties.\"}]\)\n\!\(\*RowBox[{\"LeastSquaresFit\", \"[\", \"{\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"\[Delta]\", \"TR\"], StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"\[Delta]\", \"TR\"], StyleBox[\"2\", \"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"n\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"n\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"\[Delta]\", \"TR\"], StyleBox[\"n\", \"TI\"]]}], \"}\"}]}], \"}\", \"]\"}]\) \!\(\*RowBox[{\"returns the coefficients for the least-squares fit model \", Cell[BoxData[FormBox[RowBox[{\"y\", \"=\", RowBox[{\"a\", \"+\", RowBox[{\"b\", \" \", \"x\"}]}]}], TraditionalForm]], \"InlineMath\"], \", weighted according to uncertainties \", Cell[BoxData[SubscriptBox[StyleBox[\"\[Delta]\", \"TR\"], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \" in \", Cell[BoxData[SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \", and the correlation coefficient.\"}]\)";


PeakTableInspection::usage="\!\(\*RowBox[{\"PeakTableInspection\", \"[\", StyleBox[\"set\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" returns which intensity entries should be kept in a given \", Cell[BoxData[StyleBox[\"set\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"PeakTableInspection\", \"[\", StyleBox[\"data\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"returns a list of which reflections to delete from the given peak table \", Cell[BoxData[StyleBox[\"data\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


ReciprocalImageCheck::usage="\!\(\*RowBox[{\"ReciprocalImageCheck\", \"[\", StyleBox[\"image\", \"TI\"], \",\", StyleBox[\"system\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"i\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\)\!\(\*RowBox[{\" plots nodes of reciprocal space determined from \", Cell[BoxData[StyleBox[\"image\", \"TI\"]], \"InlineFormula\"], \" and established a lattice based on the crystal \", Cell[BoxData[StyleBox[\"system\", \"TI\"]], \"InlineFormula\"], \" and data points \", Cell[BoxData[RowBox[{SubscriptBox[StyleBox[\"X\", \"TI\"], StyleBox[\"i\", \"TI\"]], \"=\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"i\", \"TI\"]]}], \"}\"}]}]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"ReciprocalImageCheck\", \"[\", StyleBox[\"image\", \"TI\"], \",\", StyleBox[\"system\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"i\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", StyleBox[\"condition\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"plots nodes of reciprocal space determined from \", Cell[BoxData[StyleBox[\"image\", \"TI\"]], \"InlineFormula\"], \" and established a lattice based on the crystal \", Cell[BoxData[StyleBox[\"system\", \"TI\"]], \"InlineFormula\"], \" and data points \", Cell[BoxData[RowBox[{SubscriptBox[StyleBox[\"X\", \"TI\"], StyleBox[\"i\", \"TI\"]], \"=\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"i\", \"TI\"]]}], \"}\"}]}]], \"InlineFormula\"], \" and highlights the nodes satisfying the \", Cell[BoxData[StyleBox[\"condition\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


ReciprocalSpaceTool::usage="\!\(\*RowBox[{\"ReciprocalSpaceTool\", \"[\", StyleBox[\"image\", \"TI\"], \",\", StyleBox[\"system\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"i\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\)\!\(\*RowBox[{\" opens a tool panel for studying the reciprocal space determined from \", Cell[BoxData[StyleBox[\"image\", \"TI\"]], \"InlineFormula\"], \" and established a lattice based on the crystal \", Cell[BoxData[StyleBox[\"system\", \"TI\"]], \"InlineFormula\"], \" and data points \", Cell[BoxData[RowBox[{SubscriptBox[StyleBox[\"X\", \"TI\"], StyleBox[\"i\", \"TI\"]], \"=\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"i\", \"TI\"]]}], \"}\"}]}]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"ReciprocalSpaceTool\", \"[\", StyleBox[\"image\", \"TI\"], \",\", StyleBox[\"system\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"i\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", StyleBox[\"condition\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"opens a tool panel for studying the reciprocal space determined from \", Cell[BoxData[StyleBox[\"image\", \"TI\"]], \"InlineFormula\"], \" and established a lattice based on the crystal \", Cell[BoxData[StyleBox[\"system\", \"TI\"]], \"InlineFormula\"], \" and data points \", Cell[BoxData[RowBox[{SubscriptBox[StyleBox[\"X\", \"TI\"], StyleBox[\"i\", \"TI\"]], \"=\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"i\", \"TI\"]]}], \"}\"}]}]], \"InlineFormula\"], \" and highlights the nodes satisfying the \", Cell[BoxData[StyleBox[\"condition\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


RefinedValues::usage="\!\(\*RowBox[{\"RefinedValues\", \"[\", StyleBox[\"input\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" extracts all relevant and obtainable data from \", Cell[BoxData[StyleBox[\"input\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"RefinedValues\", \"[\", StyleBox[\"input\", \"TI\"], \",\", StyleBox[\"label\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"extracts parameters corresponding to \", Cell[BoxData[StyleBox[\"label\", \"TI\"]], \"InlineFormula\"], \" from \", Cell[BoxData[StyleBox[\"input\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


UnwarpLayerList::usage="\!\(\*RowBox[{\"UnwarpLayerList\", \"[\", StyleBox[\"prefix\", \"TI\"], \",\", SubscriptBox[StyleBox[\"L\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"L\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"dir\", \"TI\"], \",\", StyleBox[\"start\", \"TI\"], \",\", StyleBox[\"end\", \"TI\"], \",\", StyleBox[\"steps\", \"TI\"]}], \"}\"}], \",\", StyleBox[\"res\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" generates a layer list for the Unwarp module in \", StyleBox[\"CrysAlis\", FontSlant -> \"Italic\"], \". See details for syntax meaning.\"}]\)";


WeightedMean::usage="\!\(\*RowBox[{\"WeightedMean\", \"[\", \"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"n\", \"TI\"]]}], \"}\", \"]\"}]\)\!\(\*RowBox[{\" returns the mean, the standard deviation and the standard deviation of the mean.\"}]\)\n\!\(\*RowBox[{\"WeightedMean\", \"[\", \"{\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"\[Sigma]\", \"TR\"], StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"\[Sigma]\", \"TR\"], StyleBox[\"2\", \"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"n\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"\[Sigma]\", \"TR\"], StyleBox[\"n\", \"TI\"]]}], \"}\"}]}], \"}\", \"]\"}]\) \!\(\*RowBox[{\"returns the weighted mean and the internal and external standard deviations.\"}]\)";


